[2024-12-02 11:44:33 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2796 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 11:44:33 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:44:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 11:44:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 11:44:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:44:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:44:34 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:44:34 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:44:34 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:44:34 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 916 ms
[2024-12-02 11:44:34 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 11:44:35 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:44:35 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:44:35 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:44:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:44:35 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.946 seconds (process running for 2.402)
[2024-12-02 11:44:44 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 11:44:44 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 11:44:44 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1ce1c1f6
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 5 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 1 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 11:44:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 11:44:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 1 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 1 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 11:44:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 11:44:48 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 11:44:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 11:44:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 11:45:17 INFO http-nio-8080-exec-10] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@6fd1c0cc
[2024-12-02 11:45:17 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 0 msec}
[2024-12-02 11:45:17 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 27
             , user_id = 1
 {executed in 4 msec}
[2024-12-02 11:45:17 INFO http-nio-8080-exec-9] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@288a49c0
[2024-12-02 11:45:17 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 3 msec}
[2024-12-02 11:45:18 INFO http-nio-8080-exec-7] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@711cb7c4
[2024-12-02 11:45:18 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 0 msec}
[2024-12-02 11:45:18 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 27
             , user_id = 1
 {executed in 3 msec}
[2024-12-02 11:45:18 INFO http-nio-8080-exec-8] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@9c94f4e
[2024-12-02 11:45:18 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 3 msec}
[2024-12-02 11:45:19 INFO http-nio-8080-exec-5] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@7c7a239c
[2024-12-02 11:45:19 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 0 msec}
[2024-12-02 11:45:19 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 27
             , user_id = 1
 {executed in 2 msec}
[2024-12-02 11:45:19 INFO http-nio-8080-exec-1] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@6f24e2df
[2024-12-02 11:45:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 2 msec}
[2024-12-02 11:45:20 INFO http-nio-8080-exec-2] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@11a83cdc
[2024-12-02 11:45:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 0 msec}
[2024-12-02 11:45:20 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 27
             , user_id = 1
 {executed in 2 msec}
[2024-12-02 11:45:20 INFO http-nio-8080-exec-6] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@7246c605
[2024-12-02 11:45:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 2 msec}
[2024-12-02 11:45:52 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-02 11:45:52 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:45:52 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 11:45:52 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 11:45:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2796 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 11:45:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:45:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:45:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:45:52 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:45:52 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:45:52 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:45:52 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 206 ms
[2024-12-02 11:45:52 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 11:45:52 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:45:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:45:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:45:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:45:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.362 seconds (process running for 79.722)
[2024-12-02 11:45:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:48:17 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-02 11:48:17 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:48:17 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2796 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 11:48:17 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:48:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:48:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:48:18 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:48:18 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:48:18 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:48:18 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 182 ms
[2024-12-02 11:48:18 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 11:48:18 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:48:18 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:48:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:48:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:48:18 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.324 seconds (process running for 225.276)
[2024-12-02 11:48:18 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:49:57 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 28 class path changes (0 additions, 0 deletions, 28 modifications)
[2024-12-02 11:49:57 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:49:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2796 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 11:49:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:49:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:49:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:49:57 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:49:57 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:49:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:49:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 173 ms
[2024-12-02 11:49:57 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 11:49:57 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:49:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:49:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:49:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:49:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.307 seconds (process running for 324.54)
[2024-12-02 11:49:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:51:46 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 28 class path changes (0 additions, 0 deletions, 28 modifications)
[2024-12-02 11:51:46 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:51:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2796 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 11:51:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:51:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:51:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:51:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:51:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:51:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:51:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 173 ms
[2024-12-02 11:51:46 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 11:51:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:51:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:51:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:51:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:51:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.303 seconds (process running for 433.985)
[2024-12-02 11:51:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 11:53:23 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6732 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 11:53:23 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 11:53:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 11:53:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 11:53:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 11:53:23 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:53:24 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 11:53:24 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 11:53:24 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 11:53:24 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 773 ms
[2024-12-02 11:53:24 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 11:53:24 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 11:53:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 11:53:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 11:53:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 11:53:24 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.633 seconds (process running for 1.995)
[2024-12-02 12:07:55 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 4 class path changes (0 additions, 4 deletions, 0 modifications)
[2024-12-02 12:07:55 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:07:55 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6732 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 12:07:55 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:07:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:07:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:07:56 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:07:56 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:07:56 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:07:56 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 210 ms
[2024-12-02 12:07:56 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 12:07:56 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:07:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:07:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:07:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:07:56 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.393 seconds (process running for 873.693)
[2024-12-02 12:07:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:07:57 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 4 class path changes (4 additions, 0 deletions, 0 modifications)
[2024-12-02 12:07:57 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:07:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6732 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 12:07:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:07:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:07:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:07:57 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:07:57 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:07:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:07:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 187 ms
[2024-12-02 12:07:57 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 12:07:58 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:07:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:07:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:07:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:07:58 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.336 seconds (process running for 875.522)
[2024-12-02 12:07:58 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:08:29 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11980 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 12:08:29 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:08:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:08:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:08:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:08:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:08:30 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:08:30 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:08:30 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:08:30 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 774 ms
[2024-12-02 12:08:30 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 12:08:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:08:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:08:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:08:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:08:30 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.641 seconds (process running for 2.001)
[2024-12-02 12:08:36 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:08:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:08:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6c88b5dc
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 1 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 12:08:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 12:08:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 12:08:54 INFO http-nio-8080-exec-2] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@2b512694
[2024-12-02 12:08:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 1 msec}
[2024-12-02 12:08:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 27
             , user_id = 1
 {executed in 2 msec}
[2024-12-02 12:10:35 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:10:35 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 12:10:37 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11784 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 12:10:37 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:10:37 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:10:37 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:10:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:10:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:10:38 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:10:38 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:10:38 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:10:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 773 ms
[2024-12-02 12:10:38 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 12:10:38 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:10:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:10:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:10:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:10:38 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.629 seconds (process running for 1.993)
[2024-12-02 12:11:09 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10364 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 12:11:09 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:11:09 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:11:09 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:11:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:11:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:11:10 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:11:10 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:11:10 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:11:10 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 788 ms
[2024-12-02 12:11:10 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 12:11:10 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:11:11 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:11:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:11:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:11:11 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.645 seconds (process running for 2.007)
[2024-12-02 12:12:13 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12012 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 12:12:13 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:12:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:12:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:12:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:12:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:12:14 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:12:14 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:12:14 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:12:14 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 775 ms
[2024-12-02 12:12:14 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 12:12:14 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:12:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:12:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:12:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:12:15 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.639 seconds (process running for 2.008)
[2024-12-02 12:12:20 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:12:20 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:12:20 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@59be098c
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 12:12:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 12:12:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 12:12:25 INFO http-nio-8080-exec-10] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@381f3071
[2024-12-02 12:12:25 WARN http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comment' doesn't exist
[2024-12-02 12:12:25 ERRORhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
          SET feed_id = 27
            , user_id = 1
            , comment = '귀여워'
 {FAILED after 2 msec}
java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:15)
	at com.green.greengram.feed.comment.FeedCommentController.FeedComment(FeedCommentController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:12:25 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comment           SET feed_id = ?             , user_id = ?             , comment = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:15)
	at com.green.greengram.feed.comment.FeedCommentController.FeedComment(FeedCommentController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:12:25 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@7c1baa8a
[2024-12-02 12:12:25 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comment' doesn't exist
[2024-12-02 12:12:25 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
          SET feed_id = 27
            , user_id = 1
            , comment = '귀여워'
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:15)
	at com.green.greengram.feed.comment.FeedCommentController.FeedComment(FeedCommentController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:12:25 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comment           SET feed_id = ?             , user_id = ?             , comment = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:15)
	at com.green.greengram.feed.comment.FeedCommentController.FeedComment(FeedCommentController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:12:25 INFO http-nio-8080-exec-3] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@727f7693
[2024-12-02 12:12:25 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comment' doesn't exist
[2024-12-02 12:12:25 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
          SET feed_id = 27
            , user_id = 1
            , comment = '귀여워'
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:15)
	at com.green.greengram.feed.comment.FeedCommentController.FeedComment(FeedCommentController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:12:25 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comment           SET feed_id = ?             , user_id = ?             , comment = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:15)
	at com.green.greengram.feed.comment.FeedCommentController.FeedComment(FeedCommentController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:12:26 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@381c6ccc
[2024-12-02 12:12:26 WARN http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver2.feed_comment' doesn't exist
[2024-12-02 12:12:26 ERRORhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
          SET feed_id = 27
            , user_id = 1
            , comment = '귀여워'
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:15)
	at com.green.greengram.feed.comment.FeedCommentController.FeedComment(FeedCommentController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:12:26 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_comment           SET feed_id = ?             , user_id = ?             , comment = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=24) Table 'greengram_ver2.feed_comment' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.insFeedComment(Unknown Source)
	at com.green.greengram.feed.comment.FeedCommentService.postFeedComment(FeedCommentService.java:15)
	at com.green.greengram.feed.comment.FeedCommentController.FeedComment(FeedCommentController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:14:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:14:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 12:14:55 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 12:14:55 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:14:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 12:14:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 12:14:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:14:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:14:56 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:14:56 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:14:56 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:14:56 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 771 ms
[2024-12-02 12:14:56 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 12:14:56 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:14:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:14:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:14:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:14:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.631 seconds (process running for 2.0)
[2024-12-02 12:15:00 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 12:15:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 12:15:00 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6ac0aef6
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 12:15:00 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 12:15:00 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 12:15:05 INFO http-nio-8080-exec-10] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@36b1e67d
[2024-12-02 12:15:05 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '귀여워'
 {executed in 2 msec}
[2024-12-02 12:15:05 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '귀여워'
 {executed in 0 msec}
[2024-12-02 12:15:05 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|1         |
|----------|

[2024-12-02 12:18:44 INFO http-nio-8080-exec-5] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@381c6ccc
[2024-12-02 12:18:44 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '나랑 같이 살래?'
 {executed in 2 msec}
[2024-12-02 12:18:44 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '나랑 같이 살래?'
 {executed in 0 msec}
[2024-12-02 12:18:44 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|2         |
|----------|

[2024-12-02 12:18:53 INFO http-nio-8080-exec-8] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@412b2827
[2024-12-02 12:18:53 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 26
            , user_id = 1
            , comment = '이쁘다'
 {executed in 2 msec}
[2024-12-02 12:18:53 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 26
            , user_id = 1
            , comment = '이쁘다'
 {executed in 0 msec}
[2024-12-02 12:18:53 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|3         |
|----------|

[2024-12-02 12:19:03 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@7ecbbc01
[2024-12-02 12:19:03 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 25
            , user_id = 1
            , comment = '최고다'
 {executed in 2 msec}
[2024-12-02 12:19:03 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 25
            , user_id = 1
            , comment = '최고다'
 {executed in 0 msec}
[2024-12-02 12:19:03 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|4         |
|----------|

[2024-12-02 12:19:10 INFO http-nio-8080-exec-4] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@7a0c3889
[2024-12-02 12:19:10 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 22
            , user_id = 1
            , comment = '와우'
 {executed in 1 msec}
[2024-12-02 12:19:10 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 22
            , user_id = 1
            , comment = '와우'
 {executed in 0 msec}
[2024-12-02 12:19:10 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|5         |
|----------|

[2024-12-02 12:19:14 INFO http-nio-8080-exec-7] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@1f57b7d2
[2024-12-02 12:19:14 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 13
            , user_id = 1
            , comment = '대박이다'
 {executed in 2 msec}
[2024-12-02 12:19:14 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 13
            , user_id = 1
            , comment = '대박이다'
 {executed in 0 msec}
[2024-12-02 12:19:14 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|6         |
|----------|

[2024-12-02 12:19:20 INFO http-nio-8080-exec-10] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@6ada27b2
[2024-12-02 12:19:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 11
            , user_id = 1
            , comment = '팬이에요'
 {executed in 2 msec}
[2024-12-02 12:19:20 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 11
            , user_id = 1
            , comment = '팬이에요'
 {executed in 0 msec}
[2024-12-02 12:19:20 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|7         |
|----------|

[2024-12-02 12:19:27 INFO http-nio-8080-exec-6] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@7640ec04
[2024-12-02 12:19:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 10
            , user_id = 1
            , comment = '저랑 사진 한번만'
 {executed in 2 msec}
[2024-12-02 12:19:27 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 10
            , user_id = 1
            , comment = '저랑 사진 한번만'
 {executed in 0 msec}
[2024-12-02 12:19:27 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|8         |
|----------|

[2024-12-02 12:23:00 INFO http-nio-8080-exec-9] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 12:27:37 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 12:27:37 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 12:27:40 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@7ef31b84
[2024-12-02 12:27:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = 'ㅁㄴㅇㄹ'
 {executed in 2 msec}
[2024-12-02 12:27:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = 'ㅁㄴㅇㄹ'
 {executed in 0 msec}
[2024-12-02 12:27:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|9         |
|----------|

[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 1 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 12:27:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 12:27:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 12:30:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 12:30:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 12:30:56 INFO http-nio-8080-exec-5] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@49da4880
[2024-12-02 12:30:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '펭펭귄귄'
 {executed in 3 msec}
[2024-12-02 12:30:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '펭펭귄귄'
 {executed in 0 msec}
[2024-12-02 12:30:56 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|10        |
|----------|

[2024-12-02 12:40:46 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)
[2024-12-02 12:40:46 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:40:46 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 12:40:46 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 12:40:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 12:40:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:40:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:40:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:40:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:40:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:40:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:40:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 214 ms
[2024-12-02 12:40:46 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 12:40:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:40:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:40:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:40:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:40:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.39 seconds (process running for 1551.367)
[2024-12-02 12:40:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:45:56 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)
[2024-12-02 12:45:56 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:45:56 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 12:45:56 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:45:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:45:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:45:56 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:45:56 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:45:56 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:45:56 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 183 ms
[2024-12-02 12:45:57 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 12:45:57 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:45:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:45:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:45:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:45:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.336 seconds (process running for 1861.919)
[2024-12-02 12:45:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 12:59:52 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
[2024-12-02 12:59:52 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:59:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 12:59:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 12:59:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 12:59:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:59:53 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 12:59:53 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 12:59:53 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 12:59:53 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 182 ms
[2024-12-02 12:59:53 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 12:59:53 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 12:59:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 12:59:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 12:59:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 12:59:53 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.323 seconds (process running for 2698.019)
[2024-12-02 12:59:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 13:00:53 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 13:00:53 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 13:00:53 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 13:00:53 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 13:00:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 13:00:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 13:00:53 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 13:00:53 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 13:00:53 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 13:00:53 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 172 ms
[2024-12-02 13:00:53 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 13:00:53 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 13:00:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 13:00:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 13:00:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 13:00:53 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.307 seconds (process running for 2758.497)
[2024-12-02 13:00:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 14:03:21 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (1 addition, 0 deletions, 1 modification)
[2024-12-02 14:03:21 INFO Thread-19] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:03:22 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 14:03:22 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 14:03:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 14:03:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:03:22 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 14:03:22 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 14:03:22 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 14:03:22 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 183 ms
[2024-12-02 14:03:22 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 14:03:22 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 14:03:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 14:03:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:03:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 14:03:22 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.332 seconds (process running for 6507.119)
[2024-12-02 14:03:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 14:31:28 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 14:31:28 INFO Thread-23] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:31:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 14:31:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 14:31:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 14:31:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:31:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 14:31:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 14:31:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 14:31:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 178 ms
[2024-12-02 14:31:29 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 14:31:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 14:31:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 14:31:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:31:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 14:31:29 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.327 seconds (process running for 8194.045)
[2024-12-02 14:31:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 14:33:51 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 14:33:51 INFO Thread-27] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:33:51 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 14:33:51 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 14:33:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 14:33:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:33:52 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 14:33:52 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 14:33:52 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 14:33:52 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 169 ms
[2024-12-02 14:33:52 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 14:33:52 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 14:33:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 14:33:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:33:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 14:33:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.297 seconds (process running for 8337.011)
[2024-12-02 14:33:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 14:41:03 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 14:41:03 INFO Thread-31] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:41:04 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 14:41:04 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 14:41:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 14:41:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:41:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 14:41:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 14:41:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 14:41:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 168 ms
[2024-12-02 14:41:04 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 14:41:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 14:41:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 14:41:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:41:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 14:41:04 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.296 seconds (process running for 8769.095)
[2024-12-02 14:41:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 14:43:33 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 14:43:33 INFO Thread-35] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:43:33 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 14:43:33 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 14:43:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 14:43:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:43:33 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 14:43:33 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 14:43:33 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 14:43:33 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 173 ms
[2024-12-02 14:43:33 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 14:43:33 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 14:43:33 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 14:43:33 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:43:33 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 14:43:33 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.3 seconds (process running for 8918.17)
[2024-12-02 14:43:33 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 14:50:14 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 14:50:14 INFO Thread-39] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:50:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 14:50:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 14:50:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 14:50:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:50:15 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 14:50:15 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 14:50:15 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 14:50:15 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 213 ms
[2024-12-02 14:50:15 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 14:50:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 14:50:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 14:50:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:50:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 14:50:15 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.366 seconds (process running for 9320.07)
[2024-12-02 14:50:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 14:55:42 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-02 14:55:42 INFO Thread-43] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:55:42 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 14:55:42 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 14:55:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 14:55:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:55:42 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 14:55:42 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 14:55:42 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 14:55:42 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 183 ms
[2024-12-02 14:55:42 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 14:55:42 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 14:55:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 14:55:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 14:55:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 14:55:42 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.332 seconds (process running for 9647.733)
[2024-12-02 14:55:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 15:01:45 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 6 class path changes (1 addition, 0 deletions, 5 modifications)
[2024-12-02 15:01:45 INFO Thread-47] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:01:45 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 15:01:45 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 15:01:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 15:01:45 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:01:45 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 15:01:45 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 15:01:45 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 15:01:45 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 180 ms
[2024-12-02 15:01:45 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 15:01:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 15:01:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 15:01:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:01:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 15:01:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.327 seconds (process running for 10010.891)
[2024-12-02 15:01:46 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 15:06:01 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
[2024-12-02 15:06:01 INFO Thread-51] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:06:02 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 15:06:02 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 15:06:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 15:06:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:06:02 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 15:06:02 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 15:06:02 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 15:06:02 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 175 ms
[2024-12-02 15:06:02 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 15:06:02 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 15:06:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 15:06:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:06:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 15:06:02 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.299 seconds (process running for 10267.108)
[2024-12-02 15:06:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 15:23:05 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)
[2024-12-02 15:23:05 INFO Thread-55] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:23:05 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 15:23:05 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 15:23:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 15:23:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:23:05 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 15:23:05 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 15:23:05 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 15:23:05 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 182 ms
[2024-12-02 15:23:05 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 15:23:05 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 15:23:05 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 15:23:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:23:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 15:23:05 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.325 seconds (process running for 11290.739)
[2024-12-02 15:23:05 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 15:29:41 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-02 15:29:41 INFO Thread-59] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:29:41 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 15:29:41 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 15:29:41 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 15:29:41 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:29:41 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 15:29:41 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 15:29:41 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 15:29:41 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 187 ms
[2024-12-02 15:29:41 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 15:29:41 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 15:29:41 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 15:29:41 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:29:41 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 15:29:41 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.342 seconds (process running for 11686.226)
[2024-12-02 15:29:41 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 15:38:14 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 5 class path changes (0 additions, 0 deletions, 5 modifications)
[2024-12-02 15:38:14 INFO Thread-63] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:38:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10532 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 15:38:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 15:38:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 15:38:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:38:14 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 15:38:14 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 15:38:14 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 15:38:14 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 176 ms
[2024-12-02 15:38:14 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 15:38:14 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 15:38:14 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 15:38:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:38:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 15:38:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.3 seconds (process running for 12199.61)
[2024-12-02 15:38:14 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-02 15:50:02 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 12100 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 15:50:02 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 15:50:02 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 15:50:02 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 15:50:03 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 15:50:03 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:50:03 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 15:50:03 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 15:50:03 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 15:50:03 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 773 ms
[2024-12-02 15:50:03 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 15:50:03 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 15:50:03 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 15:50:03 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:50:03 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 15:50:03 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.642 seconds (process running for 2.005)
[2024-12-02 15:50:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 15:50:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 15:50:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 15:50:11 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 15:50:11 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 15:50:11 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 15:50:11 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5ee27bb5
[2024-12-02 15:50:11 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 15:50:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 15:50:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 15:50:11 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 15:50:11 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 15:50:11 WARN http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
[2024-12-02 15:50:11 ERRORhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT -17, 21
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 15:50:11 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
### The error may exist in file [D:\jju\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT a.feed_comment_id as feedCommentId              , a.comment              , b.user_id as writerUserId              , IF(b.nick_name IS NULL, b.uid, b.nick_name)              , b.pic as writerPic          FROM feed_comments a         INNER JOIN user b            ON a.user_id = b.user_id         WHERE a.feed_id = ?         ORDER BY a.feed_id desc         LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 15:51:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '123'
 {executed in 2 msec}
[2024-12-02 15:51:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|1       |123      |$2a$10$QHlpSAdmPSj6e9fC2GBASOnxdg.lQw5bW5Mkx8554Cxc4/O1QFLkO |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-02 15:51:05 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 15:51:05 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 15:51:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 2 msec}
[2024-12-02 15:51:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 15:51:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 15:51:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 15:51:05 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
[2024-12-02 15:51:05 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT -17, 21
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 15:51:05 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
### The error may exist in file [D:\jju\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT a.feed_comment_id as feedCommentId              , a.comment              , b.user_id as writerUserId              , IF(b.nick_name IS NULL, b.uid, b.nick_name)              , b.pic as writerPic          FROM feed_comments a         INNER JOIN user b            ON a.user_id = b.user_id         WHERE a.feed_id = ?         ORDER BY a.feed_id desc         LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 15:54:13 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 15:54:13 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 15:54:13 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 15:54:13 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 15:54:13 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 15:54:13 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 15:54:13 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
[2024-12-02 15:54:13 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT -17, 21
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 15:54:13 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
### The error may exist in file [D:\jju\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT a.feed_comment_id as feedCommentId              , a.comment              , b.user_id as writerUserId              , IF(b.nick_name IS NULL, b.uid, b.nick_name)              , b.pic as writerPic          FROM feed_comments a         INNER JOIN user b            ON a.user_id = b.user_id         WHERE a.feed_id = ?         ORDER BY a.feed_id desc         LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 15:55:45 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 15:55:45 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 15:55:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 15:55:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 15:55:45 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 15:55:45 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 15:55:45 WARN http-nio-8080-exec-8] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
[2024-12-02 15:55:45 ERRORhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT -17, 21
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 15:55:45 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
### The error may exist in file [D:\jju\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT a.feed_comment_id as feedCommentId              , a.comment              , b.user_id as writerUserId              , IF(b.nick_name IS NULL, b.uid, b.nick_name)              , b.pic as writerPic          FROM feed_comments a         INNER JOIN user b            ON a.user_id = b.user_id         WHERE a.feed_id = ?         ORDER BY a.feed_id desc         LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 15:57:28 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 15:57:28 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 15:57:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 15:57:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 15:57:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 15:57:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 15:57:28 WARN http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
[2024-12-02 15:57:28 ERRORhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT -17, 21
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 15:57:28 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
### The error may exist in file [D:\jju\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT a.feed_comment_id as feedCommentId              , a.comment              , b.user_id as writerUserId              , IF(b.nick_name IS NULL, b.uid, b.nick_name)              , b.pic as writerPic          FROM feed_comments a         INNER JOIN user b            ON a.user_id = b.user_id         WHERE a.feed_id = ?         ORDER BY a.feed_id desc         LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=44) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 15:57:49 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 15:57:49 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 15:57:51 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10896 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 15:57:51 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 15:57:51 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 15:57:51 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 15:57:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 15:57:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:57:52 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 15:57:52 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 15:57:52 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 15:57:52 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 796 ms
[2024-12-02 15:57:52 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 15:57:52 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 15:57:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 15:57:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 15:57:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 15:57:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.67 seconds (process running for 2.073)
[2024-12-02 15:57:56 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 15:57:56 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 15:57:56 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 15:57:56 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 15:57:56 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 15:57:56 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 15:57:56 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5b8249ba
[2024-12-02 15:57:56 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 15:57:57 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 15:57:57 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 15:57:57 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 15:57:57 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 15:57:57 WARN http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
[2024-12-02 15:57:57 ERRORhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT -17, 21
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=54) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 15:57:57 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=54) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
### The error may exist in file [D:\jju\GreenGramVer2\build\resources\main\mappers\FeedCommentMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT a.feed_comment_id as feedCommentId              , a.comment              , b.user_id as writerUserId              , IF(b.nick_name IS NULL, b.uid, b.nick_name)              , b.pic as writerPic          FROM feed_comments a         INNER JOIN user b            ON a.user_id = b.user_id         WHERE a.feed_id = ?         ORDER BY a.feed_id desc         LIMIT ?, ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=54) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=54) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '-17, 21' at line 11
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy78.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy79.selFeedCommentList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:01:25 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:01:25 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:11:15 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 156 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 16:11:15 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:11:15 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:11:15 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:11:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:11:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:11:16 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:11:16 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:11:16 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:11:16 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 790 ms
[2024-12-02 16:11:16 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 16:11:17 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:11:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:11:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:11:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:11:17 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.666 seconds (process running for 2.061)
[2024-12-02 16:11:56 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:11:56 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:11:56 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e4c289d
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 1 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:11:56 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:11:56 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:20:09 INFO http-nio-8080-exec-4] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@6a31affd
[2024-12-02 16:20:09 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 3 msec}
[2024-12-02 16:20:09 INFO http-nio-8080-exec-7] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@1c3be6bc
[2024-12-02 16:20:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 0 msec}
[2024-12-02 16:20:09 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 27
             , user_id = 1
 {executed in 2 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:20:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:20:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:23:55 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:23:55 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:23:58 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 13188 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 16:23:58 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:23:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:23:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:23:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:23:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:23:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:23:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:23:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:23:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 907 ms
[2024-12-02 16:23:59 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 16:23:59 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:23:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:23:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:23:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:23:59 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.88 seconds (process running for 2.268)
[2024-12-02 16:24:03 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:24:03 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:24:03 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6471efc7
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 1 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:24:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:24:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:24:08 INFO http-nio-8080-exec-6] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 171 ms
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: 20, signeduserId: 1
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:29:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:24 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:29:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:29:47 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:30:48 INFO http-nio-8080-exec-1] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@7b284d6c
[2024-12-02 16:30:48 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 2 msec}
[2024-12-02 16:30:57 INFO http-nio-8080-exec-10] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@462e3be5
[2024-12-02 16:30:57 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 27
           AND user_id = 1
 {executed in 0 msec}
[2024-12-02 16:30:57 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 27
             , user_id = 1
 {executed in 2 msec}
[2024-12-02 16:35:31 INFO http-nio-8080-exec-5] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@2aa35e8
[2024-12-02 16:35:31 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '너 이름 뭐나 ♥'
 {executed in 2 msec}
[2024-12-02 16:35:31 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '너 이름 뭐나 ♥'
 {executed in 0 msec}
[2024-12-02 16:35:31 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|11        |
|----------|

[2024-12-02 16:37:56 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 2, size: null, signeduserId: 1
[2024-12-02 16:37:56 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=1)
[2024-12-02 16:37:56 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 20, 20
 {executed in 1 msec}
[2024-12-02 16:37:56 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:37:58 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 3, size: null, signeduserId: 1
[2024-12-02 16:37:58 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=3, size=20, startIdx=40), signedUserId=1)
[2024-12-02 16:37:58 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 40, 20
 {executed in 0 msec}
[2024-12-02 16:37:58 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:11 INFO http-nio-8080-exec-4] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@9637c47
[2024-12-02 16:38:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 2
            , user_id = 1
            , comment = '흰둥이 유치원가자'
 {executed in 3 msec}
[2024-12-02 16:38:11 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 2
            , user_id = 1
            , comment = '흰둥이 유치원가자'
 {executed in 0 msec}
[2024-12-02 16:38:11 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|12        |
|----------|

[2024-12-02 16:38:15 INFO http-nio-8080-exec-6] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@627f215c
[2024-12-02 16:38:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 2
            , user_id = 1
            , comment = '빨리 나와라'
 {executed in 3 msec}
[2024-12-02 16:38:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 2
            , user_id = 1
            , comment = '빨리 나와라'
 {executed in 0 msec}
[2024-12-02 16:38:15 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|13        |
|----------|

[2024-12-02 16:38:45 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 4, size: null, signeduserId: 1
[2024-12-02 16:38:45 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=4, size=20, startIdx=60), signedUserId=1)
[2024-12-02 16:38:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 60, 20
 {executed in 0 msec}
[2024-12-02 16:38:45 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:47 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page: 5, size: null, signeduserId: 1
[2024-12-02 16:38:47 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=5, size=20, startIdx=80), signedUserId=1)
[2024-12-02 16:38:47 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 80, 20
 {executed in 1 msec}
[2024-12-02 16:38:47 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:48 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 6, size: null, signeduserId: 1
[2024-12-02 16:38:48 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=6, size=20, startIdx=100), signedUserId=1)
[2024-12-02 16:38:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 100, 20
 {executed in 1 msec}
[2024-12-02 16:38:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:50 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 7, size: null, signeduserId: 1
[2024-12-02 16:38:50 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=7, size=20, startIdx=120), signedUserId=1)
[2024-12-02 16:38:50 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 120, 20
 {executed in 1 msec}
[2024-12-02 16:38:50 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:50 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 8, size: null, signeduserId: 1
[2024-12-02 16:38:50 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=8, size=20, startIdx=140), signedUserId=1)
[2024-12-02 16:38:50 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 140, 20
 {executed in 1 msec}
[2024-12-02 16:38:50 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:51 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 9, size: null, signeduserId: 1
[2024-12-02 16:38:51 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=9, size=20, startIdx=160), signedUserId=1)
[2024-12-02 16:38:51 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 160, 20
 {executed in 1 msec}
[2024-12-02 16:38:51 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:51 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page: 10, size: null, signeduserId: 1
[2024-12-02 16:38:51 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=10, size=20, startIdx=180), signedUserId=1)
[2024-12-02 16:38:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 180, 20
 {executed in 1 msec}
[2024-12-02 16:38:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:52 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 11, size: null, signeduserId: 1
[2024-12-02 16:38:52 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=11, size=20, startIdx=200), signedUserId=1)
[2024-12-02 16:38:52 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 200, 20
 {executed in 1 msec}
[2024-12-02 16:38:52 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:52 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page: 12, size: null, signeduserId: 1
[2024-12-02 16:38:52 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=12, size=20, startIdx=220), signedUserId=1)
[2024-12-02 16:38:52 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 220, 20
 {executed in 1 msec}
[2024-12-02 16:38:52 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:53 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 13, size: null, signeduserId: 1
[2024-12-02 16:38:53 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=13, size=20, startIdx=240), signedUserId=1)
[2024-12-02 16:38:53 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 240, 20
 {executed in 0 msec}
[2024-12-02 16:38:53 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:55 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 14, size: null, signeduserId: 1
[2024-12-02 16:38:55 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=14, size=20, startIdx=260), signedUserId=1)
[2024-12-02 16:38:55 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 260, 20
 {executed in 1 msec}
[2024-12-02 16:38:55 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:38:56 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page: 15, size: null, signeduserId: 1
[2024-12-02 16:38:56 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=15, size=20, startIdx=280), signedUserId=1)
[2024-12-02 16:38:56 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 280, 20
 {executed in 1 msec}
[2024-12-02 16:38:56 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:39:45 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:39:45 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|12              |흰둥이 유치원가자 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|13              |빨리 나와라    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:41:02 INFO http-nio-8080-exec-8] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:41:27 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:41:30 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'OVMF' is not supported]
[2024-12-02 16:41:30 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:41:35 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:41:41 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:41:51 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:42:46 INFO http-nio-8080-exec-3] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-02 16:44:10 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:44:10 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:44:10 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:44:10 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:44:13 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'BPEQ' is not supported]
[2024-12-02 16:44:13 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:46:22 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'AWAM' is not supported]
[2024-12-02 16:46:22 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:46:32 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:46:32 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:46:35 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-02 16:46:45 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-02 16:53:03 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 16:53:03 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-02 16:54:19 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11880 (D:\jju\GreenGramVer2\build\classes\java\main started by Administrator in D:\jju\GreenGramVer2)
[2024-12-02 16:54:19 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-02 16:54:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-02 16:54:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-02 16:54:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-02 16:54:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:54:20 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-02 16:54:20 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-02 16:54:20 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-02 16:54:20 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 824 ms
[2024-12-02 16:54:20 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-02 16:54:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-02 16:54:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-02 16:54:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-02 16:54:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-02 16:54:20 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.707 seconds (process running for 2.093)
[2024-12-02 16:54:39 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-02 16:54:39 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-02 16:54:39 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@60c711e1
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 1 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:54:39 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:54:39 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|12              |흰둥이 유치원가자 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|13              |빨리 나와라    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:54:50 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-02 16:55:04 INFO http-nio-8080-exec-1] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@42bb8587
[2024-12-02 16:55:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '나는 펭귄이야'
 {executed in 3 msec}
[2024-12-02 16:55:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '나는 펭귄이야'
 {executed in 0 msec}
[2024-12-02 16:55:04 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|14        |
|----------|

[2024-12-02 16:55:07 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-02 16:55:07 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-02 16:55:11 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-02 16:55:16 INFO http-nio-8080-exec-5] [com.green.greengram.feed.comment.FeedCommentController] p: com.green.greengram.feed.comment.model.FeedCommentPostReq@4c5127c7
[2024-12-02 16:55:16 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '와 재밌다'
 {executed in 2 msec}
[2024-12-02 16:55:16 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comments
          SET feed_id = 27
            , user_id = 1
            , comment = '와 재밌다'
 {executed in 0 msec}
[2024-12-02 16:55:16 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|15        |
|----------|

[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:55:19 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:55:19 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|12              |흰둥이 유치원가자 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|13              |빨리 나와라    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:55:23 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 1 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:57:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:57:00 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|12              |흰둥이 유치원가자 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|13              |빨리 나와라    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:22 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
           SET uid = '펭귄'
             , upw = '$2a$10$V1tHgrFWJx.Zy1MP6pcb..hae06MrNcKQ2d6naLEbfdtKkvXJioO2'
             , nick_name = '펭귄'
             , pic = 'bf51dc4b-aba1-4894-bb26-70d639795698.jpg'
 {executed in 1 msec}
[2024-12-02 16:58:22 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
           SET uid = '펭귄'
             , upw = '$2a$10$V1tHgrFWJx.Zy1MP6pcb..hae06MrNcKQ2d6naLEbfdtKkvXJioO2'
             , nick_name = '펭귄'
             , pic = 'bf51dc4b-aba1-4894-bb26-70d639795698.jpg'
 {executed in 0 msec}
[2024-12-02 16:58:22 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|6         |
|----------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '펭귄'
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|6       |펭귄       |$2a$10$V1tHgrFWJx.Zy1MP6pcb..hae06MrNcKQ2d6naLEbfdtKkvXJioO2 |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 6
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6)
[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 6
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:58:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|12              |흰둥이 유치원가자 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|13              |빨리 나와라    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 6
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6)
[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 6
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:58:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:58:46 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|12              |흰둥이 유치원가자 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|13              |빨리 나와라    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 6
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6)
[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 6
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:59:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:01 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|12              |흰둥이 유치원가자 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|13              |빨리 나와라    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 6
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6)
[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 6
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 1 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 1 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 1 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:59:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|12              |흰둥이 유치원가자 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|13              |빨리 나와라    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 6
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6)
[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 6
        ORDER BY a.feed_id DESC
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|8       |삼성라이온즈       |삼성라이온즈파크 |2024-11-29 14:28:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|5       |확인           |대한민국     |2024-11-29 11:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|3       |피드넣어보기       |동성로      |2024-11-29 10:49:22 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|1               |귀여워       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|2               |나랑 같이 살래? |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|9               |ㅁㄴㅇㄹ      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|10              |펭펭귄귄      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 26
 {executed in 1 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|3               |이쁘다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|4               |최고다     |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 8
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cde62fe-9dd4-4e9e-ac11-25a2559eff9b.jpg |
|5be780f6-66e0-4e59-9054-4a1141794d67.jpg |
|856a2baa-d782-4c35-8482-da6b9dce7fb6.png |
|875f3f7c-38a9-4527-92d2-25fd842ac921.jpg |
|bb0f6389-936b-4d21-86e4-0f3bb64b2adb.jpg |
|c707f9f8-8e73-417d-86dd-677ce6545652.png |
|df935b5e-939a-4dfe-ba20-b1d713a7573d.png |
|e9cce468-9e3e-46c7-977e-07dbdc04b05f.jpg |
|f21b9066-9e91-4227-b392-bf264dc9f7e9.png |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 8
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 5
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2eaf7ff1-19ca-4084-9e1e-44198735481c.jpg |
|8f7cc6b7-d60b-47e3-86ef-db11712fe577.jpg |
|ac638da8-68b4-4b9b-9226-aa1d8d9ef5bc.jpg |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 5
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 3
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|------------------------------------------|
|pic                                       |
|------------------------------------------|
|56dd8c10-4cc7-407e-b863-6f9815ae0c95.webp |
|a583914b-93e1-42e8-bde7-0bfdaa93a868.jpg  |
|------------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 3
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-02 16:59:07 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comments a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY a.feed_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-02 16:59:07 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|12              |흰둥이 유치원가자 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|13              |빨리 나와라    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-02 17:00:06 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-02 17:00:06 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
