[2024-12-06 09:46:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2484 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 09:46:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 09:46:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 09:46:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 09:46:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 09:46:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 09:46:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 09:46:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 09:46:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 09:46:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 983 ms
[2024-12-06 09:46:29 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-06 09:46:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 09:46:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 09:46:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 09:46:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 09:46:30 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 2.258 seconds (process running for 2.759)
[2024-12-06 10:30:19 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10784 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 10:30:19 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 10:30:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 10:30:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 10:30:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 10:30:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 10:30:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 10:30:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 10:30:19 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 10:30:19 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 812 ms
[2024-12-06 10:30:20 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-06 10:30:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 10:30:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 10:30:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 10:30:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 10:30:20 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.695 seconds (process running for 2.062)
[2024-12-06 11:12:37 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10588 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 11:12:37 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:12:37 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:12:37 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:12:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:12:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:12:38 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:12:38 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:12:38 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:12:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 790 ms
[2024-12-06 11:12:38 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver2
[2024-12-06 11:12:38 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:12:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:12:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:12:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:12:39 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.652 seconds (process running for 2.029)
[2024-12-06 11:14:39 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4944 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 11:14:39 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:14:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:14:39 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:14:40 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:14:40 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:14:40 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:14:40 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:14:40 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:14:40 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 794 ms
[2024-12-06 11:14:40 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 11:14:40 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:14:41 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:14:41 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:14:41 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:14:41 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.665 seconds (process running for 2.038)
[2024-12-06 11:42:13 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 8012 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 11:42:13 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:42:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:42:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:42:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:42:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:42:14 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:42:14 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:42:14 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:42:14 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 795 ms
[2024-12-06 11:42:14 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 11:42:14 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:42:14 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:42:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:42:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:42:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.675 seconds (process running for 2.054)
[2024-12-06 11:44:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9784 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 11:44:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:44:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:44:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:44:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:44:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:44:47 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:44:47 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:44:47 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:44:47 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 821 ms
[2024-12-06 11:44:47 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 11:44:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:44:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:44:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:44:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:44:48 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.891 seconds (process running for 2.256)
[2024-12-06 11:45:03 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-06 11:45:03 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:45:03 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9784 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 11:45:03 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:45:03 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:45:03 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:45:03 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:45:03 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:45:03 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:45:03 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 201 ms
[2024-12-06 11:45:03 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 11:45:03 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:45:03 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:45:03 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:45:03 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:45:03 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.359 seconds (process running for 17.365)
[2024-12-06 11:45:03 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-06 11:45:05 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9084 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 11:45:05 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:45:05 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:45:05 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:45:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:45:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:45:06 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:45:06 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:45:06 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:45:06 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 888 ms
[2024-12-06 11:45:06 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 11:45:06 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:45:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:45:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:45:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:45:07 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.853 seconds (process running for 2.238)
[2024-12-06 11:45:18 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 11:45:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 11:45:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 11:45:19 INFO http-nio-8080-exec-5] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 216 ms
[2024-12-06 11:57:41 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9692 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 11:57:41 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 11:57:41 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 11:57:41 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 11:57:41 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 11:57:41 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:57:41 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 11:57:41 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 11:57:41 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 11:57:41 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 806 ms
[2024-12-06 11:57:41 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 11:57:42 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 11:57:42 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 11:57:42 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 11:57:42 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 11:57:42 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.683 seconds (process running for 2.051)
[2024-12-06 12:05:52 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 35 class path changes (0 additions, 0 deletions, 35 modifications)
[2024-12-06 12:05:52 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:05:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9692 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:05:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:05:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:05:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:05:52 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:05:52 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:05:52 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:05:52 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 207 ms
[2024-12-06 12:05:52 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:05:52 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:05:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:05:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:05:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:05:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.397 seconds (process running for 492.2)
[2024-12-06 12:05:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-06 12:06:04 INFO SpringApplicationShutdownHook] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:06:06 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10992 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:06:06 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:06:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:06:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:06:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:06:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:06:06 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:06:06 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:06:06 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:06:06 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 784 ms
[2024-12-06 12:06:06 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:06:07 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:06:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:06:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:06:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:06:07 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.671 seconds (process running for 2.036)
[2024-12-06 12:06:14 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:06:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:06:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-06 12:06:14 INFO http-nio-8080-exec-6] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 207 ms
[2024-12-06 12:06:58 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3636 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:06:58 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:06:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:06:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:06:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:06:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:06:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:06:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:06:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:06:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 799 ms
[2024-12-06 12:06:59 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:06:59 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:06:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:06:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:06:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:06:59 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.664 seconds (process running for 2.015)
[2024-12-06 12:07:02 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:07:02 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:07:02 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 12:07:02 INFO http-nio-8080-exec-2] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 206 ms
[2024-12-06 12:07:14 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-06 12:07:14 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:07:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3636 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:07:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:07:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:07:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:07:14 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:07:14 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:07:14 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:07:14 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 230 ms
[2024-12-06 12:07:14 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:07:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:07:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:07:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:07:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:07:15 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.39 seconds (process running for 17.571)
[2024-12-06 12:07:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-06 12:07:17 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3588 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:07:17 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:07:17 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:07:17 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:07:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:07:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:07:18 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:07:18 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:07:18 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:07:18 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 802 ms
[2024-12-06 12:07:18 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:07:18 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:07:19 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:07:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:07:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:07:19 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.722 seconds (process running for 2.085)
[2024-12-06 12:07:23 INFO http-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:07:23 INFO http-nio-8080-exec-2] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:07:23 INFO http-nio-8080-exec-2] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 12:07:23 INFO http-nio-8080-exec-4] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 204 ms
[2024-12-06 12:08:03 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 988 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:08:03 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:08:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:08:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:08:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:08:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:08:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:08:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:08:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:08:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 787 ms
[2024-12-06 12:08:04 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:08:05 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:08:05 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:08:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:08:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:08:05 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.679 seconds (process running for 2.036)
[2024-12-06 12:08:06 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:08:06 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:08:06 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 12:08:06 INFO http-nio-8080-exec-4] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 222 ms
[2024-12-06 12:08:35 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.green.greengram.common.model.ResultResponse<java.lang.Integer> com.green.greengram.user.follow.UserFollowController.postUserFollow(com.green.greengram.user.follow.model.UserFollowReq)]
[2024-12-06 12:09:24 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.green.greengram.common.model.ResultResponse<java.lang.Integer> com.green.greengram.user.follow.UserFollowController.postUserFollow(com.green.greengram.user.follow.model.UserFollowReq)]
[2024-12-06 12:10:31 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3504 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:10:31 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:10:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:10:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:10:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:10:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:10:32 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:10:32 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:10:32 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:10:32 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 811 ms
[2024-12-06 12:10:32 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:10:32 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:10:32 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:10:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:10:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:10:33 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.79 seconds (process running for 2.157)
[2024-12-06 12:10:36 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:10:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:10:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-06 12:10:36 INFO http-nio-8080-exec-4] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 212 ms
[2024-12-06 12:10:43 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=2)
[2024-12-06 12:10:43 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 12:10:43 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7d867436
[2024-12-06 12:10:43 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 12:10:43 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 2
 {executed in 2 msec}
[2024-12-06 12:11:43 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=2)
[2024-12-06 12:11:43 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.user.follow.UserFollowMapper.deleteUserFollow] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.user.follow.UserFollowMapper.deleteUserFollow
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy88.deleteUserFollow(Unknown Source)
	at com.green.greengram.user.follow.UserFollowService.deleteUserFollow(UserFollowService.java:22)
	at com.green.greengram.user.follow.UserFollowController.deleteUserFollow(UserFollowController.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:11:53 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 12:11:53 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 12:11:55 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10460 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:11:55 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:11:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:11:55 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:11:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:11:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:11:55 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:11:55 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:11:55 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:11:55 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 797 ms
[2024-12-06 12:11:55 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:11:56 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:11:56 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:11:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:11:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:11:56 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.685 seconds (process running for 2.059)
[2024-12-06 12:12:01 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:12:01 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:12:01 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-06 12:12:01 INFO http-nio-8080-exec-8] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 207 ms
[2024-12-06 12:12:04 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=2)
[2024-12-06 12:12:04 ERRORhttp-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.user.follow.UserFollowMapper.deleteUserFollow] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.user.follow.UserFollowMapper.deleteUserFollow
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy88.deleteUserFollow(Unknown Source)
	at com.green.greengram.user.follow.UserFollowService.deleteUserFollow(UserFollowService.java:22)
	at com.green.greengram.user.follow.UserFollowController.deleteUserFollow(UserFollowController.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:13:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9560 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:13:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:13:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:13:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:13:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:13:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:13:15 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:13:15 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:13:15 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:13:15 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 784 ms
[2024-12-06 12:13:15 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:13:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:13:16 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:13:16 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:13:16 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:13:16 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.65 seconds (process running for 2.008)
[2024-12-06 12:13:33 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3024 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:13:33 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:13:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:13:33 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:13:34 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:13:34 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:13:34 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:13:34 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:13:34 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:13:34 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 798 ms
[2024-12-06 12:13:34 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:13:34 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:13:35 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:13:35 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:13:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:13:35 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.692 seconds (process running for 2.057)
[2024-12-06 12:13:38 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:13:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:13:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 12:13:38 INFO http-nio-8080-exec-7] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 203 ms
[2024-12-06 12:13:40 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=2)
[2024-12-06 12:13:40 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.user.follow.UserFollowMapper.deleteUserFollow] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.user.follow.UserFollowMapper.deleteUserFollow
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy88.deleteUserFollow(Unknown Source)
	at com.green.greengram.user.follow.UserFollowService.deleteUserFollow(UserFollowService.java:22)
	at com.green.greengram.user.follow.UserFollowController.deleteUserFollow(UserFollowController.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:936)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:596)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:14:50 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10508 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:14:50 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:14:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:14:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:14:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:14:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:14:51 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:14:51 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:14:51 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:14:51 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 815 ms
[2024-12-06 12:14:51 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:14:51 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:14:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:14:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:14:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:14:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.793 seconds (process running for 2.156)
[2024-12-06 12:14:53 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:14:53 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:14:53 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-06 12:14:53 INFO http-nio-8080-exec-8] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 210 ms
[2024-12-06 12:14:56 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=2)
[2024-12-06 12:14:56 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 12:14:56 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@671c576f
[2024-12-06 12:14:56 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 12:14:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
        WHERE from_user_id = 1
        AND to_user_id = 2
 {executed in 2 msec}
[2024-12-06 12:20:06 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 12:20:06 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 12:20:08 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6124 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:20:08 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:20:08 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:20:08 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:20:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:20:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:20:09 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:20:09 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:20:09 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:20:09 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 806 ms
[2024-12-06 12:20:09 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:20:09 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:20:09 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:20:09 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:20:09 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:20:09 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.752 seconds (process running for 2.119)
[2024-12-06 12:20:09 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:20:09 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:20:09 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 12:20:09 INFO http-nio-8080-exec-9] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 218 ms
[2024-12-06 12:20:22 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9112 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:20:22 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:20:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:20:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:20:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:20:23 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:20:23 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:20:23 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:20:23 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:20:23 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 779 ms
[2024-12-06 12:20:23 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:20:23 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:20:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:20:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:20:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:20:24 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.651 seconds (process running for 2.01)
[2024-12-06 12:31:48 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 40 class path changes (0 additions, 40 deletions, 0 modifications)
[2024-12-06 12:31:48 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:31:48 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9112 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:31:48 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:31:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:31:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:31:49 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:31:49 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:31:49 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:31:49 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 267 ms
[2024-12-06 12:31:49 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:31:49 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:31:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:31:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:31:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:31:49 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.503 seconds (process running for 687.271)
[2024-12-06 12:31:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-06 12:31:50 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 40 class path changes (40 additions, 0 deletions, 0 modifications)
[2024-12-06 12:31:50 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:31:50 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9112 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:31:50 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:31:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:31:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:31:51 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:31:51 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:31:51 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:31:51 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 227 ms
[2024-12-06 12:31:51 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:31:51 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:31:51 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:31:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:31:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:31:51 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.393 seconds (process running for 689.191)
[2024-12-06 12:31:51 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-06 12:41:22 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5584 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:41:22 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:41:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:41:22 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:41:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:41:23 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:41:23 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:41:23 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:41:23 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:41:23 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 774 ms
[2024-12-06 12:41:23 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:41:23 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:41:23 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:41:23 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:41:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:41:23 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.653 seconds (process running for 2.032)
[2024-12-06 12:41:52 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:41:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:41:52 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-06 12:41:52 INFO http-nio-8080-exec-4] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 204 ms
[2024-12-06 12:42:02 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 12:42:02 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@538cd0ae
[2024-12-06 12:42:02 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 12:42:02 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '123'
 {executed in 0 msec}
[2024-12-06 12:42:02 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|1       |123      |$2a$10$QHlpSAdmPSj6e9fC2GBASOnxdg.lQw5bW5Mkx8554Cxc4/O1QFLkO |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-06 12:42:02 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 12:42:02 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 12:42:03 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-06 12:42:03 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 12:42:03 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 12:42:03 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:42:03 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT pic         FROM feed_pics         WHERE feed_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:42:30 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 12:42:30 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 12:42:30 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 12:42:30 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 12:42:30 WARN http-nio-8080-exec-5] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 12:42:30 ERRORhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:42:30 ERRORhttp-nio-8080-exec-5] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT pic         FROM feed_pics         WHERE feed_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:46:54 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 2 msec}
[2024-12-06 12:46:54 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:46:54 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|40        |
|----------|

[2024-12-06 12:46:54 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 12:46:54 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
            40, 'a7ec267f-12c2-49e8-a2f8-f289f795eab4.gif'
         )
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:46:54 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_pics         (feed_id, pic)         VALUES          (               ?, ?          )
### Cause: java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:46:56 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:46:56 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:46:56 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|41        |
|----------|

[2024-12-06 12:46:56 WARN http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 12:46:56 ERRORhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
            41, 'f582b38d-245a-4ce2-91fe-181acc7efa61.gif'
         )
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:46:56 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_pics         (feed_id, pic)         VALUES          (               ?, ?          )
### Cause: java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=28) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:12 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 12:47:12 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 12:47:13 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9704 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:47:13 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:47:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:47:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:47:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:47:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:47:14 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:47:14 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:47:14 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:47:14 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 858 ms
[2024-12-06 12:47:14 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:47:14 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:47:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:47:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:47:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:47:15 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.759 seconds (process running for 2.13)
[2024-12-06 12:47:18 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:47:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:47:18 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-06 12:47:18 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 12:47:18 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 12:47:18 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 12:47:18 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6dbee153
[2024-12-06 12:47:18 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 12:47:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-06 12:47:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 12:47:18 WARN http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 12:47:18 ERRORhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:18 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT pic         FROM feed_pics         WHERE feed_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:27 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:47:27 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:47:27 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|42        |
|----------|

[2024-12-06 12:47:27 WARN http-nio-8080-exec-9] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 12:47:27 ERRORhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
            42, '7315286d-81b3-4ec5-9f2e-cb67a8406098.gif'
         )
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:27 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_pics         (feed_id, pic)         VALUES          (               ?, ?          )
### Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:47:28 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:47:28 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|43        |
|----------|

[2024-12-06 12:47:28 WARN http-nio-8080-exec-10] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 12:47:28 ERRORhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
            43, '0c096582-73a4-4cdb-bfbf-304c777f1648.gif'
         )
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:28 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_pics         (feed_id, pic)         VALUES          (               ?, ?          )
### Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:28 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:47:28 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:47:28 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|44        |
|----------|

[2024-12-06 12:47:28 WARN http-nio-8080-exec-1] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 12:47:28 ERRORhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
            44, '88fce723-1473-4882-b04a-334f576eb8c5.gif'
         )
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:28 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_pics         (feed_id, pic)         VALUES          (               ?, ?          )
### Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:47:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:47:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|45        |
|----------|

[2024-12-06 12:47:28 WARN http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 12:47:28 ERRORhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
            45, '36a12f96-642b-4852-8472-3e618b542763.gif'
         )
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:28 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_pics         (feed_id, pic)         VALUES          (               ?, ?          )
### Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:28 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:47:28 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:47:28 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|46        |
|----------|

[2024-12-06 12:47:28 WARN http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 12:47:28 ERRORhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
         (  
            46, '6ba388dd-9b57-405c-9412-80ff88d3694f.gif'
         )
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:47:28 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicsMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: INSERT INTO feed_pics         (feed_id, pic)         VALUES          (               ?, ?          )
### Cause: java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=38) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPics(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:50:03 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 32 class path changes (0 additions, 0 deletions, 32 modifications)
[2024-12-06 12:50:03 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:50:03 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 12:50:03 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 12:50:04 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9704 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:50:04 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:50:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:50:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:50:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:50:04 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:50:04 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:50:04 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 213 ms
[2024-12-06 12:50:04 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:50:04 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:50:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:50:04 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:50:04 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:50:04 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.393 seconds (process running for 171.319)
[2024-12-06 12:50:04 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-06 12:50:46 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 32 class path changes (0 additions, 0 deletions, 32 modifications)
[2024-12-06 12:50:46 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:50:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9704 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:50:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:50:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:50:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:50:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:50:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:50:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:50:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 203 ms
[2024-12-06 12:50:46 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:50:46 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:50:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:50:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:50:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:50:47 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.353 seconds (process running for 213.943)
[2024-12-06 12:50:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-06 12:51:34 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3252 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:51:34 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:51:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:51:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:51:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:51:35 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:51:35 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:51:35 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:51:35 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:51:35 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 802 ms
[2024-12-06 12:51:35 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:51:35 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:51:36 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:51:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:51:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:51:36 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.704 seconds (process running for 2.088)
[2024-12-06 12:53:01 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7724 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:53:01 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:53:01 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:53:01 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:53:01 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:53:01 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:53:01 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:53:01 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:53:01 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:53:01 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 810 ms
[2024-12-06 12:53:02 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:53:02 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:53:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:53:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:53:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:53:02 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.709 seconds (process running for 2.062)
[2024-12-06 12:53:05 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:53:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:53:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-06 12:53:05 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 12:53:05 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 12:53:05 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 12:53:05 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6fa06b3e
[2024-12-06 12:53:05 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 12:53:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-06 12:53:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 12:53:05 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPic] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPic
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:53:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:53:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:53:22 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|47        |
|----------|

[2024-12-06 12:53:22 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.insFeedPic] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.insFeedPic
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:53:22 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 1 msec}
[2024-12-06 12:53:22 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 12:53:22 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|48        |
|----------|

[2024-12-06 12:53:22 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.insFeedPic] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.insFeedPic
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.insFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.postFeed(FeedService.java:58)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.postFeed(<generated>)
	at com.green.greengram.feed.FeedController.postFeed(FeedController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:54:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 12:54:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 12:54:43 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9864 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:54:43 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:54:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:54:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:54:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:54:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:54:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:54:44 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:54:44 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:54:44 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 818 ms
[2024-12-06 12:54:44 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:54:44 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
[2024-12-06 12:54:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-06 12:54:44 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-06 12:54:44 ERRORrestartedMain] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.green.greengram.GreenGramVer2Application.main(GreenGramVer2Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentService' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 62 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 76 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]'. Cause: java.lang.IllegalArgumentException: Mapped Statements collection already contains key com.green.greengram.feed.FeedPicMapper.insFeedPic. please check file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml] and file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:100)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:698)
	... 85 common frames omitted
Caused by: java.lang.IllegalArgumentException: Mapped Statements collection already contains key com.green.greengram.feed.FeedPicMapper.insFeedPic. please check file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml] and file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:1071)
	at org.apache.ibatis.session.Configuration$StrictMap.put(Configuration.java:1024)
	at org.apache.ibatis.session.Configuration.addMappedStatement(Configuration.java:822)
	at org.apache.ibatis.builder.MapperBuilderAssistant.addMappedStatement(MapperBuilderAssistant.java:223)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:143)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:125)
	... 87 common frames omitted
[2024-12-06 12:54:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5208 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:54:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:54:52 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:54:52 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:54:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:54:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:54:53 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:54:53 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:54:53 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:54:53 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 782 ms
[2024-12-06 12:54:53 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:54:53 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:54:53 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:54:53 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:54:53 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:54:53 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.651 seconds (process running for 2.028)
[2024-12-06 12:55:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1768 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:55:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:55:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:55:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:55:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:55:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:55:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:55:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:55:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:55:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 791 ms
[2024-12-06 12:55:28 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:55:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:55:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:55:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:55:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:55:29 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.674 seconds (process running for 2.037)
[2024-12-06 12:55:35 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:55:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:55:35 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 12:55:35 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 12:55:35 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 12:55:35 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 12:55:36 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2fcc312f
[2024-12-06 12:55:36 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 12:55:36 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-06 12:55:36 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 12:55:36 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPic] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPic
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:55:37 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 12:55:37 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 12:55:37 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-06 12:55:37 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 12:55:37 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPic] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPic
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:56:40 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 12:56:40 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 12:56:42 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6400 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 12:56:42 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 12:56:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 12:56:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 12:56:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 12:56:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:56:43 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 12:56:43 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 12:56:43 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 12:56:43 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 792 ms
[2024-12-06 12:56:43 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 12:56:43 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 12:56:43 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 12:56:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 12:56:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 12:56:43 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.698 seconds (process running for 2.071)
[2024-12-06 12:56:50 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 12:56:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 12:56:50 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-06 12:56:50 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 12:56:50 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 12:56:50 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 12:56:50 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@28efad10
[2024-12-06 12:56:50 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 12:56:50 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 12:56:50 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 12:56:50 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPic] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.green.greengram.feed.FeedPicMapper.selFeedPic
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:229)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:96)
	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708)
	at org.apache.ibatis.util.MapUtil.computeIfAbsent(MapUtil.java:36)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 12:57:29 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 12:57:29 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 13:00:36 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10584 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 13:00:36 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 13:00:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 13:00:36 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 13:00:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 13:00:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:00:37 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 13:00:37 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 13:00:37 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 13:00:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 792 ms
[2024-12-06 13:00:37 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 13:00:37 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 13:00:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 13:00:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:00:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 13:00:37 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.672 seconds (process running for 2.043)
[2024-12-06 13:00:42 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 13:00:42 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 13:00:42 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 13:00:42 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:00:42 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:00:42 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 13:00:42 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@8ca2136
[2024-12-06 13:00:42 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 13:00:42 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 13:00:42 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 13:00:42 WARN http-nio-8080-exec-6] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 13:00:42 ERRORhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=88) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 13:00:42 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=88) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT pic         FROM feed_pics         WHERE feed_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=88) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=88) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 13:00:49 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 13:00:49 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 13:00:50 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11204 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 13:00:50 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 13:00:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 13:00:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 13:00:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 13:00:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:00:51 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 13:00:51 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 13:00:51 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 13:00:51 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 786 ms
[2024-12-06 13:00:51 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 13:00:51 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 13:00:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 13:00:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:00:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 13:00:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.67 seconds (process running for 2.051)
[2024-12-06 13:00:55 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 13:00:55 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 13:00:55 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 13:00:56 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:00:56 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:00:56 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 13:00:56 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@53954a00
[2024-12-06 13:00:56 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 13:00:56 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-06 13:00:56 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 13:00:56 WARN http-nio-8080-exec-3] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 13:00:56 ERRORhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 37
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=98) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 13:00:56 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=98) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT pic         FROM feed_pics         WHERE feed_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=98) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=98) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 13:02:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 13:02:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 13:02:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|50        |
|----------|

[2024-12-06 13:02:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            50, '45dcfcd9-173b-472b-b4ac-44b4c60e7547.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:02:27 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:02:32 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:02:32 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:02:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 13:02:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|50      |             |         |2024-12-06 13:02:27 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 13:02:32 WARN http-nio-8080-exec-2] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 13:02:32 ERRORhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 50
 {FAILED after 16 msec}
java.sql.SQLSyntaxErrorException: (conn=98) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 13:02:32 ERRORhttp-nio-8080-exec-2] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=98) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT pic         FROM feed_pics         WHERE feed_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=98) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=98) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 13:04:21 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 13:04:21 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 13:04:23 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4324 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 13:04:23 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 13:04:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 13:04:23 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 13:04:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 13:04:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:04:24 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 13:04:24 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 13:04:24 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 13:04:24 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 794 ms
[2024-12-06 13:04:24 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 13:04:24 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 13:04:24 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 13:04:24 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:04:24 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 13:04:24 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.684 seconds (process running for 2.059)
[2024-12-06 13:04:29 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 13:04:29 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 13:04:29 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 13:04:29 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:04:29 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:04:29 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 13:04:29 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2fcc312f
[2024-12-06 13:04:29 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 13:04:29 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-06 13:04:29 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|50      |             |         |2024-12-06 13:02:27 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 13:04:29 WARN http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 13:04:29 ERRORhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 50
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=108) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 13:04:29 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=108) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT pic         FROM feed_pics         WHERE feed_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=108) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=108) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 13:04:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 13:04:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-06 13:04:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|51        |
|----------|

[2024-12-06 13:04:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            51, 'dd3ad3b6-542e-4c4d-802f-bf5042b0d09b.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:04:37 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:04:39 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:04:39 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:04:39 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-06 13:04:39 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|51      |             |         |2024-12-06 13:04:37 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|50      |             |         |2024-12-06 13:02:27 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 13:04:39 WARN http-nio-8080-exec-4] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1146-42S02: Table 'greengram_ver3.feed_pics' doesn't exist
[2024-12-06 13:04:39 ERRORhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pics
        WHERE feed_id = 51
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=108) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 13:04:39 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: (conn=108) Table 'greengram_ver3.feed_pics' doesn't exist
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\FeedPicMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT pic         FROM feed_pics         WHERE feed_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=108) Table 'greengram_ver3.feed_pics' doesn't exist
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=108) Table 'greengram_ver3.feed_pics' doesn't exist
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy86.selFeedPic(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 13:05:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 13:05:59 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 13:06:01 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10616 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 13:06:01 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 13:06:01 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 13:06:01 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 13:06:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 13:06:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:06:02 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 13:06:02 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 13:06:02 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 13:06:02 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 788 ms
[2024-12-06 13:06:02 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 13:06:02 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 13:06:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 13:06:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:06:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 13:06:02 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.669 seconds (process running for 2.065)
[2024-12-06 13:06:05 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 13:06:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 13:06:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@ba076c
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|51      |             |         |2024-12-06 13:04:37 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|50      |             |         |2024-12-06 13:02:27 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 51
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dd3ad3b6-542e-4c4d-802f-bf5042b0d09b.gif |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 51
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 50
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|45dcfcd9-173b-472b-b4ac-44b4c60e7547.gif |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 50
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 1 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 2 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-06 13:06:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:06:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:06:13 INFO http-nio-8080-exec-9] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > getFeedComment > p: FeedCommentGetReq(feedId=27, startIdx=3, size=21)
[2024-12-06 13:06:13 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 3, 21
 {executed in 1 msec}
[2024-12-06 13:06:13 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|75              |25      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|74              |24      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|73              |23      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|72              |22      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|71              |21      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|70              |20      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|69              |19      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|68              |18      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|67              |17      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|66              |16      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|65              |15      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|64              |14      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|63              |13      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|62              |12      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|61              |1       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|60              |11      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|59              |10      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|58              |9       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|57              |8       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|54              |7       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 1 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-06 13:07:04 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:07:04 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:15 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
           SET uid = 'asd'
             , upw = '$2a$10$aYHsW2ttQuvQ.IerBWYQXuqxecWWgodWAe3UiK.6N3ohDMJ5Cnm3G'
             , nick_name = '내가 못뚫을지 알아?'
             , pic = 'fec2385f-433d-4701-a841-9489730c9238.gif'
 {executed in 16 msec}
[2024-12-06 13:08:15 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
           SET uid = 'asd'
             , upw = '$2a$10$aYHsW2ttQuvQ.IerBWYQXuqxecWWgodWAe3UiK.6N3ohDMJ5Cnm3G'
             , nick_name = '내가 못뚫을지 알아?'
             , pic = 'fec2385f-433d-4701-a841-9489730c9238.gif'
 {executed in 0 msec}
[2024-12-06 13:08:15 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|7         |
|----------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|------------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname    |upw                                                          |pic                                      |
|--------|------------|-------------------------------------------------------------|-----------------------------------------|
|7       |내가 못뚫을지 알아? |$2a$10$aYHsW2ttQuvQ.IerBWYQXuqxecWWgodWAe3UiK.6N3ohDMJ5Cnm3G |fec2385f-433d-4701-a841-9489730c9238.gif |
|--------|------------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 7
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7)
[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 7
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 16 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-06 13:08:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:08:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:08:35 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:35 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:35 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|52        |
|----------|

[2024-12-06 13:08:35 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            52, '66ac6fba-13f7-435b-87f6-cd7e5039a278.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:08:35 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:08:36 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:36 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:36 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|53        |
|----------|

[2024-12-06 13:08:36 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            53, '9b3b2360-693d-4f73-9377-0db293745a3d.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:08:36 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:08:55 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:55 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:55 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|54        |
|----------|

[2024-12-06 13:08:55 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            54, '8ce04993-8ffc-43bb-9f60-77509b5efdef.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:08:55 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:08:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:56 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|55        |
|----------|

[2024-12-06 13:08:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            55, 'dfd1c2f3-8c26-4760-8e4b-b36abecc4398.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:08:56 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:08:57 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:57 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:57 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|56        |
|----------|

[2024-12-06 13:08:57 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            56, '4e36138b-bc2c-4b44-978d-84a75ba208bf.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:08:57 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:08:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:08:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|57        |
|----------|

[2024-12-06 13:08:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            57, 'ec4f09df-051e-40d6-a2df-7dc5c294533d.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:08:59 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:09:01 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:01 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:01 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:01 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:01 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|58        |
|----------|

[2024-12-06 13:09:01 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            58, 'c2fc772e-d4e2-49e7-9afa-67f925ffd0a6.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:09:01 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:09:01 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:02 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:02 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:02 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|59        |
|----------|

[2024-12-06 13:09:02 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            59, 'ab8bdf42-0252-4b48-ae03-6e28e228c002.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:09:02 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:09:03 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:03 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:03 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:04 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:04 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:04 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:04 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:04 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:04 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:04 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:05 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:05 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:05 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:05 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:05 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:05 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:06 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:06 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:06 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:06 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:06 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:06 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:07 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:07 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:07 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:07 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:07 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:07 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:08 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:08 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:08 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:08 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:08 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:08 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:09 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:09 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:09 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:09 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:09 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:09 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:10 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'pics' is not present.]
[2024-12-06 13:09:13 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 13:09:13 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 13:09:25 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6304 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 13:09:25 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 13:09:25 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 13:09:25 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 13:09:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 13:09:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:09:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 13:09:26 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 13:09:26 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 13:09:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 801 ms
[2024-12-06 13:09:26 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 13:09:26 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 13:09:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 13:09:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:09:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 13:09:26 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.699 seconds (process running for 2.059)
[2024-12-06 13:09:26 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 13:09:26 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 13:09:26 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-06 13:09:26 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 13:09:27 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@625577a3
[2024-12-06 13:09:27 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|60        |
|----------|

[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            60, 'bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:09:27 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:27 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|61        |
|----------|

[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            61, '647e4e32-69b0-4f8c-b550-c86d87a6709d.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:09:27 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:27 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|62        |
|----------|

[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            62, '50585e1d-b4bc-4633-9680-96b53e59304a.gif'
         )
 {executed in 1 msec}
[2024-12-06 13:09:27 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:27 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|63        |
|----------|

[2024-12-06 13:09:27 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            63, '54e42a9a-62e9-4e29-847f-af6d6030438d.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:09:27 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:09:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|64        |
|----------|

[2024-12-06 13:09:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            64, '56011350-59f1-44fc-a08a-2879822687ab.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:09:28 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:09:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:28 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|65        |
|----------|

[2024-12-06 13:09:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            65, '3b7e17ae-446b-4771-852e-faaf2a6ba638.gif'
         )
 {executed in 0 msec}
[2024-12-06 13:09:28 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:09:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 1 msec}
[2024-12-06 13:09:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = 'asd'
             , location = 'asd'
 {executed in 0 msec}
[2024-12-06 13:09:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|66        |
|----------|

[2024-12-06 13:09:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            66, 'aa133ca8-cf6c-4eef-a038-baecff84b5f1.gif'
         )
 {executed in 1 msec}
[2024-12-06 13:09:28 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-06 13:09:28 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to write: java.nio.channels.ClosedChannelException]
[2024-12-06 13:09:28 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to write: java.nio.channels.ClosedChannelException]
[2024-12-06 13:09:28 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to write: java.nio.channels.ClosedChannelException]
[2024-12-06 13:09:28 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to write: java.nio.channels.ClosedChannelException]
[2024-12-06 13:09:28 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.context.request.async.AsyncRequestNotUsableException: ServletOutputStream failed to write: java.nio.channels.ClosedChannelException]
[2024-12-06 13:09:28 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 13:09:28 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 13:09:34 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11000 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 13:09:34 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 13:09:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 13:09:34 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 13:09:35 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 13:09:35 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:09:35 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 13:09:35 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 13:09:35 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 13:09:35 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 790 ms
[2024-12-06 13:09:35 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 13:09:35 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 13:09:36 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 13:09:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 13:09:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 13:09:36 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.677 seconds (process running for 2.036)
[2024-12-06 13:09:39 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 13:09:39 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 13:09:39 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@37d2ccdd
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|66      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|65      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|64      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|63      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|62      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|61      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|59      |asd      |asd      |2024-12-06 13:09:02 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|58      |asd      |asd      |2024-12-06 13:09:01 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|57      |asd      |asd      |2024-12-06 13:08:59 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|56      |asd      |asd      |2024-12-06 13:08:57 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|55      |asd      |asd      |2024-12-06 13:08:56 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|53      |asd      |asd      |2024-12-06 13:08:36 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |         |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |         |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |         |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |         |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |         |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|aa133ca8-cf6c-4eef-a038-baecff84b5f1.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 66
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3b7e17ae-446b-4771-852e-faaf2a6ba638.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 65
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|56011350-59f1-44fc-a08a-2879822687ab.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 64
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|54e42a9a-62e9-4e29-847f-af6d6030438d.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 63
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50585e1d-b4bc-4633-9680-96b53e59304a.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 62
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|647e4e32-69b0-4f8c-b550-c86d87a6709d.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 61
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ab8bdf42-0252-4b48-ae03-6e28e228c002.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 59
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c2fc772e-d4e2-49e7-9afa-67f925ffd0a6.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 58
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ec4f09df-051e-40d6-a2df-7dc5c294533d.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 57
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4e36138b-bc2c-4b44-978d-84a75ba208bf.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 56
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfd1c2f3-8c26-4760-8e4b-b36abecc4398.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 55
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 53
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b3b2360-693d-4f73-9377-0db293745a3d.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 53
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 13:09:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:09:39 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 2, size: null, signeduserId: 1
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=1)
[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 20, 20
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 1 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 7
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7)
[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 7
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 11 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|66      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|65      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|64      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|63      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|62      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|61      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|59      |asd      |asd      |2024-12-06 13:09:02 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|58      |asd      |asd      |2024-12-06 13:09:01 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|57      |asd      |asd      |2024-12-06 13:08:59 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|56      |asd      |asd      |2024-12-06 13:08:57 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|55      |asd      |asd      |2024-12-06 13:08:56 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|53      |asd      |asd      |2024-12-06 13:08:36 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |         |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |         |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |         |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |         |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |         |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|aa133ca8-cf6c-4eef-a038-baecff84b5f1.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 66
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3b7e17ae-446b-4771-852e-faaf2a6ba638.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 65
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|56011350-59f1-44fc-a08a-2879822687ab.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 64
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|54e42a9a-62e9-4e29-847f-af6d6030438d.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 63
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50585e1d-b4bc-4633-9680-96b53e59304a.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 62
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|647e4e32-69b0-4f8c-b550-c86d87a6709d.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 61
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ab8bdf42-0252-4b48-ae03-6e28e228c002.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 59
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c2fc772e-d4e2-49e7-9afa-67f925ffd0a6.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 58
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ec4f09df-051e-40d6-a2df-7dc5c294533d.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 57
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4e36138b-bc2c-4b44-978d-84a75ba208bf.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 56
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfd1c2f3-8c26-4760-8e4b-b36abecc4398.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 55
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 53
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|9b3b2360-693d-4f73-9377-0db293745a3d.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 53
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 13:09:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:09:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:09:43 ERRORhttp-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.multipart.MultipartException: Failed to parse multipart servlet request] with root cause
java.io.EOFException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.fillReadBuffer(NioEndpoint.java:1270)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.read(NioEndpoint.java:1181)
	at org.apache.coyote.http11.Http11InputBuffer.fill(Http11InputBuffer.java:792)
	at org.apache.coyote.http11.Http11InputBuffer$SocketInputBuffer.doRead(Http11InputBuffer.java:1198)
	at org.apache.coyote.http11.filters.IdentityInputFilter.doRead(IdentityInputFilter.java:96)
	at org.apache.coyote.http11.Http11InputBuffer.doRead(Http11InputBuffer.java:244)
	at org.apache.coyote.Request.doRead(Request.java:642)
	at org.apache.catalina.connector.InputBuffer.realReadBytes(InputBuffer.java:303)
	at org.apache.catalina.connector.InputBuffer.checkByteBufferEof(InputBuffer.java:615)
	at org.apache.catalina.connector.InputBuffer.read(InputBuffer.java:358)
	at org.apache.catalina.connector.CoyoteInputStream.read(CoyoteInputStream.java:132)
	at java.base/java.io.FilterInputStream.read(FilterInputStream.java:132)
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.read(LimitedInputStream.java:132)
	at org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream.makeAvailable(MultipartStream.java:953)
	at org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream.read(MultipartStream.java:857)
	at java.base/java.io.FilterInputStream.read(FilterInputStream.java:132)
	at org.apache.tomcat.util.http.fileupload.util.LimitedInputStream.read(LimitedInputStream.java:132)
	at java.base/java.io.FilterInputStream.read(FilterInputStream.java:106)
	at org.apache.tomcat.util.http.fileupload.util.Streams.copy(Streams.java:96)
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:292)
	at org.apache.catalina.connector.Request.parseParts(Request.java:2587)
	at org.apache.catalina.connector.Request.getParts(Request.java:2487)
	at org.apache.catalina.connector.RequestFacade.getParts(RequestFacade.java:773)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.parseRequest(StandardMultipartHttpServletRequest.java:94)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:87)
	at org.springframework.web.multipart.support.StandardServletMultipartResolver.resolveMultipart(StandardServletMultipartResolver.java:112)
	at org.springframework.web.servlet.DispatcherServlet.checkMultipart(DispatcherServlet.java:1228)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1061)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|66      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|65      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|64      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|63      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|62      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|61      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|59      |asd      |asd      |2024-12-06 13:09:02 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|58      |asd      |asd      |2024-12-06 13:09:01 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|57      |asd      |asd      |2024-12-06 13:08:59 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|56      |asd      |asd      |2024-12-06 13:08:57 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|55      |asd      |asd      |2024-12-06 13:08:56 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |         |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |         |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |         |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |         |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |         |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린      |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 13 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|aa133ca8-cf6c-4eef-a038-baecff84b5f1.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 66
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3b7e17ae-446b-4771-852e-faaf2a6ba638.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 65
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|56011350-59f1-44fc-a08a-2879822687ab.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 64
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|54e42a9a-62e9-4e29-847f-af6d6030438d.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 63
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50585e1d-b4bc-4633-9680-96b53e59304a.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 62
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|647e4e32-69b0-4f8c-b550-c86d87a6709d.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 61
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ab8bdf42-0252-4b48-ae03-6e28e228c002.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 59
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c2fc772e-d4e2-49e7-9afa-67f925ffd0a6.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 58
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ec4f09df-051e-40d6-a2df-7dc5c294533d.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 57
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|4e36138b-bc2c-4b44-978d-84a75ba208bf.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 56
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dfd1c2f3-8c26-4760-8e4b-b36abecc4398.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 55
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 1 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-06 13:10:54 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:10:54 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|66      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|65      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|64      |asd      |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|63      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|62      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|61      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|59      |asd      |asd      |2024-12-06 13:09:02 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|58      |asd      |asd      |2024-12-06 13:09:01 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|57      |asd      |asd      |2024-12-06 13:08:59 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|56      |asd      |asd      |2024-12-06 13:08:57 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|55      |asd      |asd      |2024-12-06 13:08:56 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |         |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |         |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |         |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |         |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |         |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린      |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|aa133ca8-cf6c-4eef-a038-baecff84b5f1.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 66
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3b7e17ae-446b-4771-852e-faaf2a6ba638.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 65
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|56011350-59f1-44fc-a08a-2879822687ab.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 64
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|54e42a9a-62e9-4e29-847f-af6d6030438d.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 63
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50585e1d-b4bc-4633-9680-96b53e59304a.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 62
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|647e4e32-69b0-4f8c-b550-c86d87a6709d.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 61
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ab8bdf42-0252-4b48-ae03-6e28e228c002.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 59
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 58
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 58
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 57
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 57
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 56
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 56
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 55
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----|
|pic |
|----|
|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 55
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-06 13:11:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:11:51 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|66      |asd          |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|65      |asd          |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|64      |asd          |asd      |2024-12-06 13:09:28 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|63      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|62      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|61      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|59      |asd          |asd      |2024-12-06 13:09:02 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 66
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|aa133ca8-cf6c-4eef-a038-baecff84b5f1.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 66
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 65
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3b7e17ae-446b-4771-852e-faaf2a6ba638.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 65
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 64
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|56011350-59f1-44fc-a08a-2879822687ab.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 64
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 63
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|54e42a9a-62e9-4e29-847f-af6d6030438d.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 63
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 62
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|50585e1d-b4bc-4633-9680-96b53e59304a.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 62
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 61
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|647e4e32-69b0-4f8c-b550-c86d87a6709d.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 61
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ab8bdf42-0252-4b48-ae03-6e28e228c002.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 59
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-06 13:12:37 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:12:37 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|59      |asd          |asd      |2024-12-06 13:09:02 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 59
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ab8bdf42-0252-4b48-ae03-6e28e228c002.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 59
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-06 13:13:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:29 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-06 13:13:46 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 13:13:46 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:13 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 14:21:13 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 14:21:19 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5212 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 14:21:19 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 14:21:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-06 14:21:19 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-06 14:21:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 14:21:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 14:21:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 14:21:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 14:21:19 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 14:21:19 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 801 ms
[2024-12-06 14:21:19 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 14:21:20 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 14:21:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 14:21:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 14:21:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 14:21:20 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.696 seconds (process running for 2.082)
[2024-12-06 14:21:28 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-06 14:21:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-06 14:21:28 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@53954a00
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-06 14:21:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:21:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-06 14:27:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-06 14:27:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-06 14:38:13 INFO http-nio-8080-exec-1] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 14:38:19 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-06 14:38:19 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GSTZ' is not supported]
[2024-12-06 14:38:20 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-06 14:38:22 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 14:38:25 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 14:38:25 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 14:39:01 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 14:39:01 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 14:39:01 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GTMZ' is not supported]
[2024-12-06 14:39:02 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-06 14:39:04 WARN http-nio-8080-exec-4] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 14:39:04 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-06 14:39:27 INFO http-nio-8080-exec-8] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 14:40:38 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 14:40:38 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 14:40:52 WARN http-nio-8080-exec-8] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 14:40:54 INFO http-nio-8080-exec-2] [org.apache.coyote.http11.Http11Processor] Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the HTTP protocol [RTSP/1.00x0d0x0a0x0d0x0a...]
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:557)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-06 14:40:57 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-06 14:41:06 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'UDAD' is not supported]
[2024-12-06 14:41:06 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-06 14:43:32 WARN http-nio-8080-exec-9] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-06 14:43:32 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 14:43:38 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 14:43:56 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'FAPX' is not supported]
[2024-12-06 14:43:56 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-06 14:44:03 WARN http-nio-8080-exec-7] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 15:01:18 INFO http-nio-8080-exec-10] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 185 ms
[2024-12-06 15:01:24 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=2)
[2024-12-06 15:01:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 2
 {executed in 3 msec}
[2024-12-06 15:15:32 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=2)
[2024-12-06 15:15:32 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 2
 {executed in 3 msec}
[2024-12-06 15:16:08 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=2)
[2024-12-06 15:16:08 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 2
 {executed in 2 msec}
[2024-12-06 16:52:14 WARN http-nio-8080-exec-3] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 16:52:14 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-06 16:52:38 WARN http-nio-8080-exec-2] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 16:52:46 WARN http-nio-8080-exec-6] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PROPFIND' is not supported]
[2024-12-06 16:52:46 WARN http-nio-8080-exec-10] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'TEXI' is not supported]
[2024-12-06 16:52:46 WARN http-nio-8080-exec-5] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
[2024-12-06 17:08:48 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 32 class path changes (0 additions, 0 deletions, 32 modifications)
[2024-12-06 17:08:48 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-06 17:08:48 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-06 17:08:48 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-06 17:08:48 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5212 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-06 17:08:48 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-06 17:08:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-06 17:08:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-06 17:08:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-06 17:08:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-06 17:08:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-06 17:08:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 206 ms
[2024-12-06 17:08:48 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-06 17:08:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-06 17:08:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-06 17:08:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-06 17:08:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-06 17:08:49 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.381 seconds (process running for 10050.618)
[2024-12-06 17:08:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
