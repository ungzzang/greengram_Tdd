[2024-12-09 10:38:11 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 8500 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 10:38:11 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:38:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 10:38:11 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 10:38:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:38:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:38:12 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:38:12 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:38:12 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:38:12 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 930 ms
[2024-12-09 10:38:12 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 10:38:13 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:38:13 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:38:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:38:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:38:13 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 2.012 seconds (process running for 2.525)
[2024-12-09 10:38:19 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:38:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:38:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 10:38:19 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 10:38:19 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-09 10:38:19 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@940fba4
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 10:38:20 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:20 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1)
[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 1 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 10:38:37 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 10:38:37 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 10:38:40 INFO http-nio-8080-exec-9] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 201 ms
[2024-12-09 10:40:23 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 10:40:23 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 10:40:25 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3708 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 10:40:25 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:40:25 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 10:40:25 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 10:40:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:40:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:40:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:40:26 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:40:26 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:40:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 826 ms
[2024-12-09 10:40:26 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 10:40:27 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:40:27 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:40:27 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:40:27 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:40:27 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.742 seconds (process running for 2.104)
[2024-12-09 10:40:30 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:40:30 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:40:30 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 10:40:31 INFO http-nio-8080-exec-2] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 198 ms
[2024-12-09 10:40:38 INFO http-nio-8080-exec-9] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=2, profileUserId=1)
[2024-12-09 10:40:38 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 10:40:38 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3a12b703
[2024-12-09 10:40:38 INFO http-nio-8080-exec-9] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 10:40:38 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1;
 {executed in 1 msec}
[2024-12-09 10:40:38 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |15        |8               |3           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 10:45:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 10:45:08 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 10:45:10 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2184 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 10:45:10 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 10:45:10 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 10:45:10 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 10:45:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 10:45:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:45:11 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 10:45:11 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 10:45:11 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 10:45:11 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 788 ms
[2024-12-09 10:45:11 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 10:45:11 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 10:45:11 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 10:45:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 10:45:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 10:45:11 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.674 seconds (process running for 2.034)
[2024-12-09 10:48:58 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 10:48:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 10:48:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 10:48:58 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=3, profileUserId=1)
[2024-12-09 10:48:58 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 10:48:58 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e3e8b59
[2024-12-09 10:48:58 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 10:48:58 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 3, 1, 0))
        + MAX(IF(F2.to_user_id = 3, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1;
 {executed in 1 msec}
[2024-12-09 10:48:58 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |15        |8               |1           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 11:18:14 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:18:14 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:18:16 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3976 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 11:18:16 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:18:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:18:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:18:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:18:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:18:17 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:18:17 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:18:17 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:18:17 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 810 ms
[2024-12-09 11:18:17 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 11:18:17 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:18:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:18:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:18:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:18:17 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.714 seconds (process running for 2.084)
[2024-12-09 11:18:26 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:18:26 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:18:26 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:18:27 INFO http-nio-8080-exec-10] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 217 ms
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: 30, signeduserId: 1
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=30, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5ce5c789
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111         |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-09 11:18:44 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:18:44 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:32:21 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 4 class path changes (0 additions, 0 deletions, 4 modifications)
[2024-12-09 11:32:21 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:32:21 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:32:21 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:32:21 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3976 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 11:32:21 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:32:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:32:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:32:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:32:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:32:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:32:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 203 ms
[2024-12-09 11:32:21 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 11:32:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:32:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:32:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:32:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:32:21 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.378 seconds (process running for 846.14)
[2024-12-09 11:32:21 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 11:41:16 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3680 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 11:41:16 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:41:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:41:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:41:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:41:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:41:17 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:41:17 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:41:17 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:41:17 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 794 ms
[2024-12-09 11:41:17 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 11:41:17 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:41:17 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:41:18 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:41:18 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:41:18 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.682 seconds (process running for 2.053)
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: 30, signeduserId: 1
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=30, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@601e26ac
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111         |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-09 11:41:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:27 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: 30, signeduserId: 1
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=30, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111         |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 1 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-09 11:41:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: 30, signeduserId: 1
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=30, startIdx=0), signedUserId=1, profileUserId=2)
[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 30
 {executed in 1 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111         |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-09 11:41:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:47 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: 30, signeduserId: 1
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=30, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 30
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111         |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 1 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-09 11:41:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:41:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:44:39 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 32 class path changes (0 additions, 0 deletions, 32 modifications)
[2024-12-09 11:44:39 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:44:39 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:44:39 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:44:39 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3680 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 11:44:39 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:44:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:44:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:44:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:44:39 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:44:39 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:44:39 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 200 ms
[2024-12-09 11:44:39 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 11:44:39 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
[2024-12-09 11:44:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 11:44:39 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 11:44:39 ERRORrestartedMain] [org.springframework.boot.SpringApplication] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentService' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.green.greengram.GreenGramVer2Application.main(GreenGramVer2Application.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feedCommentService' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'feedCommentMapper' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feedCommentMapper' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\feed\comment\FeedCommentMapper.class]: Cannot resolve reference to bean 'sqlSessionTemplate' while setting bean property 'sqlSessionTemplate'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 38 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionTemplate' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionTemplate' parameter 0: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\jju\GreenGramVer3\build\resources\main\mappers\UserMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 52 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\jju\GreenGramVer3\build\resources\main\mappers\UserMapper.xml]'
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 62 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception with message: Failed to parse mapping resource: 'file [D:\jju\GreenGramVer3\build\resources\main\mappers\UserMapper.xml]'
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:178)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 76 common frames omitted
Caused by: java.io.IOException: Failed to parse mapping resource: 'file [D:\jju\GreenGramVer3\build\resources\main\mappers\UserMapper.xml]'
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:700)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:577)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:720)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:189)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:146)
	... 77 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 75; columnNumber: 7; 요소 유형 "if"은(는) 짝이 맞는 종료 태그 "</if>"(으)로 종료되어야 합니다.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:262)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:127)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.<init>(XMLMapperBuilder.java:85)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:697)
	... 85 common frames omitted
Caused by: org.xml.sax.SAXParseException: 요소 유형 "if"은(는) 짝이 맞는 종료 태그 "</if>"(으)로 종료되어야 합니다.
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)
	at java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanEndElement(XMLDocumentFragmentScannerImpl.java:1695)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2899)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:605)
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:542)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:889)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:825)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at java.xml/com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:247)
	at java.xml/com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:342)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:260)
	... 88 common frames omitted
[2024-12-09 11:48:29 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1720 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 11:48:29 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:48:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:48:29 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:48:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:48:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:48:30 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:48:30 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:48:30 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:48:30 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 789 ms
[2024-12-09 11:48:30 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 11:48:30 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:48:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:48:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:48:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:48:30 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.67 seconds (process running for 2.066)
[2024-12-09 11:48:59 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:48:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:48:59 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4377bd32
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 11:48:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:48:59 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 1 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 11:49:03 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:03 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 11:49:06 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1
        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:58)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy89.selUserInfo2(Unknown Source)
	at com.green.greengram.user.UserService.getUserInfo(UserService.java:66)
	at com.green.greengram.user.UserController.getUserInfo(UserController.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 1 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 11:49:06 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 11:49:06 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 11:55:03 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:55:03 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:55:04 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 528 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 11:55:04 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:55:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:55:04 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:55:05 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:55:05 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:55:05 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:55:05 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:55:05 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:55:05 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 786 ms
[2024-12-09 11:55:05 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 11:55:05 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:55:06 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:55:06 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:55:06 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:55:06 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.665 seconds (process running for 2.034)
[2024-12-09 11:55:14 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:55:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:55:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:55:14 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:55:14 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:55:14 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 14.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:55:19 INFO http-nio-8080-exec-3] [org.springdoc.api.AbstractOpenApiResource] Init duration for springdoc-openapi is: 194 ms
[2024-12-09 11:55:21 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:55:21 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:55:21 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 14.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:55:32 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:55:32 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:55:32 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 14.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:55:40 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:55:40 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:55:40 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 14.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:55:43 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:55:43 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 11:55:43 INFO http-nio-8080-exec-2] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 11:55:43 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 14.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:55:43 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:55:43 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5fd29761
[2024-12-09 11:55:43 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:55:43 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 11:55:43 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |15        |8               |0           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 11:55:59 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:55:59 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:55:59 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 14.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:56:02 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 11:56:02 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:56:02 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 11:56:02 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 14.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:56:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 11:56:02 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |15        |8               |0           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 11:56:15 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '123'
 {executed in 0 msec}
[2024-12-09 11:56:15 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|1       |123      |$2a$10$QHlpSAdmPSj6e9fC2GBASOnxdg.lQw5bW5Mkx8554Cxc4/O1QFLkO |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-09 11:56:15 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:56:15 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:56:15 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 14.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:56:49 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:56:49 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:56:51 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9156 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 11:56:51 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:56:51 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:56:51 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:56:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:56:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:56:52 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:56:52 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:56:52 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:56:52 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 791 ms
[2024-12-09 11:56:52 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 11:56:52 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:56:52 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:56:52 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:56:52 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:56:52 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.673 seconds (process running for 2.037)
[2024-12-09 11:56:54 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:56:54 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:56:54 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:56:54 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:56:54 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:56:54 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:56:56 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:56:56 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 11:56:56 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 11:56:56 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:56:56 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:56:56 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e5b8b33
[2024-12-09 11:56:56 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:56:57 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 11:56:57 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |15        |8               |0           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 11:57:00 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:57:00 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:57:00 ERRORhttp-nio-8080-exec-4] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:57:05 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:57:05 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:57:05 ERRORhttp-nio-8080-exec-10] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:57:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:57:42 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:57:43 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3620 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 11:57:43 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:57:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:57:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:57:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:57:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:57:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:57:44 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:57:44 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:57:44 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 796 ms
[2024-12-09 11:57:44 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 11:57:44 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:57:45 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:57:45 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:57:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:57:45 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.662 seconds (process running for 2.026)
[2024-12-09 11:57:48 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:57:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:57:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:57:48 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:57:48 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:57:48 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:57:52 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:57:52 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 11:57:52 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 11:57:52 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:57:52 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:57:52 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@e5b8b33
[2024-12-09 11:57:52 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:57:52 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 11:57:52 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |15        |8               |0           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 11:57:55 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:57:55 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:57:55 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:57:58 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:57:58 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:57:58 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:58:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:58:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:58:20 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10624 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 11:58:20 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:58:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:58:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:58:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:58:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:58:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:58:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:58:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:58:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 795 ms
[2024-12-09 11:58:21 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 11:58:21 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:58:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:58:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:58:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:58:22 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.671 seconds (process running for 2.08)
[2024-12-09 11:58:24 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:58:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:58:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:58:25 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:58:25 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:58:25 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:58:32 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:58:32 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:58:32 ERRORhttp-nio-8080-exec-8] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:58:35 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:58:35 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 11:58:35 ERRORhttp-nio-8080-exec-9] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 11:58:35 INFO http-nio-8080-exec-2] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 11:58:35 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 11:58:35 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@350bc98a
[2024-12-09 11:58:35 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 11:58:35 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 11:58:35 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |15        |8               |0           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 11:58:58 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 11:58:58 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 11:58:59 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1548 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 11:58:59 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 11:58:59 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 11:58:59 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 11:59:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 11:59:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:59:00 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 11:59:00 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 11:59:00 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 11:59:00 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 778 ms
[2024-12-09 11:59:00 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 11:59:00 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 11:59:00 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 11:59:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 11:59:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 11:59:00 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.65 seconds (process running for 2.017)
[2024-12-09 11:59:05 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 11:59:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 11:59:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 11:59:06 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 11:59:06 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 11:59:06 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:00:07 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4036 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 12:00:07 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:00:07 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:00:07 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:00:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:00:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:00:07 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:00:07 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:00:07 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:00:07 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 774 ms
[2024-12-09 12:00:08 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 12:00:08 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:00:08 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:00:08 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:00:08 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:00:08 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.64 seconds (process running for 2.029)
[2024-12-09 12:00:11 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 12:00:11 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 12:00:11 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 12:00:11 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:00:11 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:00:11 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:00:14 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:00:14 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 12:00:14 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 12:00:14 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:00:14 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 12:00:14 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1d1f159b
[2024-12-09 12:00:14 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 12:00:14 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:00:14 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |15        |8               |0           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:00:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 12:00:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 12:00:42 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 504 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 12:00:42 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:00:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:00:42 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:00:43 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:00:43 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:00:43 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:00:43 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:00:43 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:00:43 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 785 ms
[2024-12-09 12:00:43 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 12:00:43 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:00:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:00:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:00:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:00:44 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.658 seconds (process running for 2.028)
[2024-12-09 12:00:48 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 12:00:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 12:00:48 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 12:00:48 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:00:48 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:00:48 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 17.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:00:51 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:00:51 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:00:51 ERRORhttp-nio-8080-exec-3] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 17.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:00:54 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:00:54 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 12:00:54 ERRORhttp-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 17.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:00:54 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 12:00:54 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 12:00:54 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2d0f7af
[2024-12-09 12:00:54 INFO http-nio-8080-exec-10] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 12:00:54 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:00:54 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |15        |8               |0           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:01:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 12:01:54 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 12:01:56 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1548 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 12:01:56 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:01:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:01:56 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:01:56 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:01:56 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:01:56 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:01:56 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:01:57 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:01:57 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 817 ms
[2024-12-09 12:01:57 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 12:01:57 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:01:57 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:01:57 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:01:57 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:01:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.717 seconds (process running for 2.113)
[2024-12-09 12:02:01 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 12:02:01 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 12:02:01 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 12:02:01 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:02:01 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:02:01 ERRORhttp-nio-8080-exec-6] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.mybatis.spring.MyBatisSystemException] with root cause
org.apache.ibatis.ognl.ParseException: Encountered " <IDENT> "is "" at line 1, column 15.
Was expecting one of:
    <EOF> 
    "," ...
    "=" ...
    "?" ...
    "||" ...
    "or" ...
    "&&" ...
    "and" ...
    "|" ...
    "bor" ...
    "^" ...
    "xor" ...
    "&" ...
    "band" ...
    "==" ...
    "eq" ...
    "!=" ...
    "neq" ...
    "<" ...
    "lt" ...
    ">" ...
    "gt" ...
    "<=" ...
    "lte" ...
    ">=" ...
    "gte" ...
    "in" ...
    "not" ...
    "<<" ...
    "shl" ...
    ">>" ...
    "shr" ...
    ">>>" ...
    "ushr" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "%" ...
    "instanceof" ...
    "." ...
    "(" ...
    "[" ...
    <DYNAMIC_SUBSCRIPT> ...
    "(" ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3232)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3098)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:19)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:179)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:55)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.lambda$apply$0(MixedSqlNode.java:32)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:32)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:88)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy85.selFeedList(Unknown Source)
	at com.green.greengram.feed.FeedService.getFeedList(FeedService.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:716)
	at com.green.greengram.feed.FeedService$$SpringCGLIB$$0.getFeedList(<generated>)
	at com.green.greengram.feed.FeedController.getFeedList(FeedController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 12:02:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9084 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 12:02:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:02:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:02:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:02:46 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:02:46 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:02:46 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:02:46 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:02:46 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:02:46 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 783 ms
[2024-12-09 12:02:46 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 12:02:47 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:02:47 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:02:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:02:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:02:47 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.656 seconds (process running for 2.022)
[2024-12-09 12:02:49 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 12:02:49 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 12:02:49 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2b02f90e
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 1 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 1 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:02:49 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:49 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 12:02:52 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:02:52 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |15        |8               |0           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:02:52 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:02:52 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:05:50 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:05:50 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:03 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 2 msec}
[2024-12-09 12:07:03 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 12:07:03 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|67        |
|----------|

[2024-12-09 12:07:03 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            67, 'c98b5416-6382-433a-9816-38f4bcf5d159.gif'
         )
 {executed in 0 msec}
[2024-12-09 12:07:03 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 12:07:13 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 12:07:13 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 12:07:13 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|68        |
|----------|

[2024-12-09 12:07:13 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            68, 'a657af9a-5dde-4a5a-845d-787ada0d5a28.gif'
         )
 {executed in 0 msec}
[2024-12-09 12:07:13 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 12:07:21 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 12:07:21 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 12:07:21 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|69        |
|----------|

[2024-12-09 12:07:21 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            69, '2cedca0c-f122-409e-85cd-f6a2572a8d75.gif'
         )
 {executed in 0 msec}
[2024-12-09 12:07:21 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 12:07:23 INFO http-nio-8080-exec-5] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 2 msec}
[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |18        |8               |0           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:07:23 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:07:23 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:07:25 INFO http-nio-8080-exec-2] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@6618cf86
[2024-12-09 12:07:25 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 69
           AND user_id = 1
 {executed in 0 msec}
[2024-12-09 12:07:25 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 69
             , user_id = 1
 {executed in 2 msec}
[2024-12-09 12:07:27 INFO http-nio-8080-exec-8] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@67c7a35a
[2024-12-09 12:07:27 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 68
           AND user_id = 1
 {executed in 1 msec}
[2024-12-09 12:07:27 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 68
             , user_id = 1
 {executed in 3 msec}
[2024-12-09 12:07:29 INFO http-nio-8080-exec-10] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@638f5a9d
[2024-12-09 12:07:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 67
           AND user_id = 1
 {executed in 0 msec}
[2024-12-09 12:07:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 67
             , user_id = 1
 {executed in 2 msec}
[2024-12-09 12:07:30 INFO http-nio-8080-exec-3] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@52c3aeff
[2024-12-09 12:07:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 37
           AND user_id = 1
 {executed in 0 msec}
[2024-12-09 12:07:30 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 37
             , user_id = 1
 {executed in 2 msec}
[2024-12-09 12:07:31 INFO http-nio-8080-exec-7] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@54430349
[2024-12-09 12:07:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 36
           AND user_id = 1
 {executed in 0 msec}
[2024-12-09 12:07:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 36
             , user_id = 1
 {executed in 2 msec}
[2024-12-09 12:07:32 INFO http-nio-8080-exec-4] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@105eddc4
[2024-12-09 12:07:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 35
           AND user_id = 1
 {executed in 0 msec}
[2024-12-09 12:07:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 35
             , user_id = 1
 {executed in 1 msec}
[2024-12-09 12:07:33 INFO http-nio-8080-exec-9] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@103f0c25
[2024-12-09 12:07:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 34
           AND user_id = 1
 {executed in 0 msec}
[2024-12-09 12:07:33 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 34
             , user_id = 1
 {executed in 2 msec}
[2024-12-09 12:07:34 INFO http-nio-8080-exec-5] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@36ece57e
[2024-12-09 12:07:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 33
           AND user_id = 1
 {executed in 1 msec}
[2024-12-09 12:07:34 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 33
             , user_id = 1
 {executed in 2 msec}
[2024-12-09 12:11:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 12:11:52 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 12:11:54 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6324 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 12:11:54 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:11:54 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:11:54 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:11:54 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:11:54 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:11:54 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:11:54 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:11:54 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:11:54 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 804 ms
[2024-12-09 12:11:54 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 12:11:55 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:11:55 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:11:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:11:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:11:55 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.702 seconds (process running for 2.069)
[2024-12-09 12:11:58 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 12:11:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 12:11:58 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@17b14871
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:11:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:11:59 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 12:12:01 INFO http-nio-8080-exec-8] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:12:01 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at            |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23.0 |123      |3        |2         |18        |16              |0           |
|--------|-----------------------------------------|----------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:12:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:12:01 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 12:38:19 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 12:38:21 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2808 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 12:38:21 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:38:21 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:38:21 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:38:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:38:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:38:22 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:38:22 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:38:22 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:38:22 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 871 ms
[2024-12-09 12:38:22 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 12:38:22 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:38:22 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:38:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:38:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:38:22 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.773 seconds (process running for 2.179)
[2024-12-09 12:38:24 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 12:38:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 12:38:24 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2b02f90e
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 1 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 1 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:38:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:38:24 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 12:38:26 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:38:26 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |3        |2         |18        |16              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:38:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:38:26 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 1 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:39:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:39:47 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:40:08 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |3        |2         |18        |16              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 1 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:40:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:40:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:41:24 WARN http-nio-8080-exec-1] [org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'DELETE' is not supported]
[2024-12-09 12:42:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 12:42:41 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 12:43:35 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1444 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 12:43:35 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:43:35 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 12:43:35 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 12:43:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:43:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:43:36 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:43:36 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:43:36 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:43:36 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 811 ms
[2024-12-09 12:43:36 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 12:43:36 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:43:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:43:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:43:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:43:37 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.689 seconds (process running for 2.06)
[2024-12-09 12:43:45 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 12:43:45 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 12:43:45 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@46ca83ed
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:43:45 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:43:45 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 12:43:48 INFO http-nio-8080-exec-8] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:43:48 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |3        |2         |18        |16              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:43:48 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:43:48 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 1 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 1 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:44:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:44:18 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=7)
[2024-12-09 12:44:18 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:44:18 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=7)
[2024-12-09 12:44:18 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 7

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:44:18 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|------------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname    |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|------------|---------|----------|----------|----------------|------------|
|7       |fec2385f-433d-4701-a841-9489730c9238.gif |2024-12-06 13:08:15 |내가 못뚫을지 알아? |0        |1         |3         |0               |0           |
|--------|-----------------------------------------|--------------------|------------|---------|----------|----------|----------------|------------|

[2024-12-09 12:44:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:44:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:44:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:44:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 2 msec}
[2024-12-09 12:44:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 1 msec}
[2024-12-09 12:44:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:44:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:44:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 1 msec}
[2024-12-09 12:44:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:44:18 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:44:18 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:44:20 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:20 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:21 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:21 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:21 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:21 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:22 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:22 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 4 msec}
[2024-12-09 12:44:22 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:22 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:22 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:22 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:22 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:22 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:22 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:22 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:23 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:23 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:23 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:23 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:23 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:23 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:23 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:23 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:23 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:23 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:23 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:23 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:24 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:24 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:24 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:24 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:24 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:24 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:24 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:24 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:24 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:24 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:24 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:24 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:24 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:25 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:25 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:25 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:25 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:25 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:25 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:25 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:25 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:25 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:25 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:25 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:25 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:25 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:25 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:26 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:26 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:26 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:26 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:26 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:26 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:26 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:26 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:26 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:26 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:27 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:27 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:27 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:27 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:27 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:27 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:27 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:27 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:27 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:27 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:27 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:27 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:28 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:28 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:28 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:28 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:28 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:28 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:28 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:28 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:29 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:29 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:29 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:29 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:29 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:29 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:29 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:29 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:29 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:29 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:29 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:29 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:29 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:30 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:30 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:30 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:30 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:30 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:30 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:30 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:30 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:30 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:30 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:30 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:30 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 4 msec}
[2024-12-09 12:44:31 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:31 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:31 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:31 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:31 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:31 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:31 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:32 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:40 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:40 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:41 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:41 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:41 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:41 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:41 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:41 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:41 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:41 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:41 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:41 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:41 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:42 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:42 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:42 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:42 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:42 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:42 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:42 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:42 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:42 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:42 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:42 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:43 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:43 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:43 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:43 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:44 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:44 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:44 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:44 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:44 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:45 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:45 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:45 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:45 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:46 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:46 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:46 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:46 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:46 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:46 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:47 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:47 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:47 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:47 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:47 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:47 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:47 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:47 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:47 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:47 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:47 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:48 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:48 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:48 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:48 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:48 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:48 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:48 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:51 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:51 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:53 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:53 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:53 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:53 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:54 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:54 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:55 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:55 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:55 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:55 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:56 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:56 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:58 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:58 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:58 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:58 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:44:59 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:59 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:59 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:59 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:44:59 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:59 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:44:59 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:44:59 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:45:00 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:00 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:45:00 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:00 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:45:00 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:00 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:45:01 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:01 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:45:01 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:01 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:45:01 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:45:01 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:01 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:45:02 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:02 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:45:02 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:02 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:45:02 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:02 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 1 msec}
[2024-12-09 12:45:02 INFO http-nio-8080-exec-5] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:02 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:45:03 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:03 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:45:03 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:03 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:45:03 INFO http-nio-8080-exec-9] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:03 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 2 msec}
[2024-12-09 12:45:04 INFO http-nio-8080-exec-1] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:04 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 1
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:45:07 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=1, toUserId=7)
[2024-12-09 12:45:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 1
           AND to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:45:13 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '111'
 {executed in 1 msec}
[2024-12-09 12:45:13 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|2       |111      |$2a$10$GAmdJ3/oBwyS5qpDsATwN.9qS5l5glzgncRDqPOezM2byAlUCgdvC |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '111'
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|2       |111      |$2a$10$GAmdJ3/oBwyS5qpDsATwN.9qS5l5glzgncRDqPOezM2byAlUCgdvC |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 2
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=null)
[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 2

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 1 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 1 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 1 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:45:15 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:15 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:22 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=2, profileUserId=1)
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 2
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=2, profileUserId=1)
[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |3        |2         |18        |16              |3           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 2

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 1 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:45:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 2 msec}
[2024-12-09 12:45:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:45:31 INFO http-nio-8080-exec-5] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=2, profileUserId=1)
[2024-12-09 12:45:31 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 2, size: null, signeduserId: 2
[2024-12-09 12:45:31 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=2, profileUserId=2)
[2024-12-09 12:45:31 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 2

            WHERE a.writer_user_id = 2

        ORDER BY a.feed_id desc
        LIMIT 20, 20
 {executed in 0 msec}
[2024-12-09 12:45:31 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 12:45:31 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 2, 1, 0))
        + MAX(IF(F2.to_user_id = 2, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:45:31 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |3        |2         |18        |16              |3           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:45:48 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '1234'
 {executed in 0 msec}
[2024-12-09 12:45:48 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|3       |1234     |$2a$10$QJ4Avg5gKfep0.vD2oo.zeykQCq4PrP6Hi1mXHexdJzDgPWrq8rCO |5c1447ee-d3b7-495f-8368-8e9159a2cd4d.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '1234'
 {executed in 1 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|3       |1234     |$2a$10$QJ4Avg5gKfep0.vD2oo.zeykQCq4PrP6Hi1mXHexdJzDgPWrq8rCO |5c1447ee-d3b7-495f-8368-8e9159a2cd4d.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 3
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=3, profileUserId=null)
[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 3

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:46:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:07 INFO http-nio-8080-exec-2] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=3, profileUserId=1)
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 3
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=3, profileUserId=1)
[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 3

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 3, 1, 0))
        + MAX(IF(F2.to_user_id = 3, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |3        |2         |18        |16              |1           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:46:07 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:07 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:08 INFO http-nio-8080-exec-10] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=3, toUserId=1)
[2024-12-09 12:46:08 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 3
           AND to_user_id = 1
 {executed in 3 msec}
[2024-12-09 12:46:08 INFO http-nio-8080-exec-4] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=3, toUserId=1)
[2024-12-09 12:46:08 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 3
            , to_user_id = 1
 {executed in 0 msec}
[2024-12-09 12:46:09 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=3, toUserId=1)
[2024-12-09 12:46:09 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM user_follow
         WHERE from_user_id = 3
           AND to_user_id = 1
 {executed in 1 msec}
[2024-12-09 12:46:09 INFO http-nio-8080-exec-8] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=3, toUserId=1)
[2024-12-09 12:46:09 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 3
            , to_user_id = 1
 {executed in 2 msec}
[2024-12-09 12:46:24 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '펭귄'
 {executed in 0 msec}
[2024-12-09 12:46:24 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|6       |펭귄       |$2a$10$V1tHgrFWJx.Zy1MP6pcb..hae06MrNcKQ2d6naLEbfdtKkvXJioO2 |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:27 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '펭귄'
 {executed in 0 msec}
[2024-12-09 12:46:27 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|6       |펭귄       |$2a$10$V1tHgrFWJx.Zy1MP6pcb..hae06MrNcKQ2d6naLEbfdtKkvXJioO2 |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '펭귄'
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|6       |펭귄       |$2a$10$V1tHgrFWJx.Zy1MP6pcb..hae06MrNcKQ2d6naLEbfdtKkvXJioO2 |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 6
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6, profileUserId=null)
[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 6

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 1 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:46:29 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:29 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:30 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=6, profileUserId=1)
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 6
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6, profileUserId=1)
[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 6

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 6, 1, 0))
        + MAX(IF(F2.to_user_id = 6, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |3        |2         |18        |16              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:46:30 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:46:30 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:46:31 INFO http-nio-8080-exec-7] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=6, toUserId=1)
[2024-12-09 12:46:31 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 6
            , to_user_id = 1
 {executed in 2 msec}
[2024-12-09 12:46:33 INFO http-nio-8080-exec-3] [com.green.greengram.user.follow.UserFollowController] UserFollowController > deleteUserFollow > p: UserFollowReq(fromUserId=6, toUserId=1)
[2024-12-09 12:46:33 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM user_follow
         WHERE from_user_id = 6
           AND to_user_id = 1
 {executed in 3 msec}
[2024-12-09 12:46:34 INFO http-nio-8080-exec-2] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=6, toUserId=1)
[2024-12-09 12:46:34 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user_follow
          SET from_user_id = 6
            , to_user_id = 1
 {executed in 2 msec}
[2024-12-09 12:46:36 INFO http-nio-8080-exec-9] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@36701585
[2024-12-09 12:46:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 69
           AND user_id = 6
 {executed in 0 msec}
[2024-12-09 12:46:36 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 69
             , user_id = 6
 {executed in 2 msec}
[2024-12-09 12:46:37 INFO http-nio-8080-exec-1] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@72a548dd
[2024-12-09 12:46:37 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM feed_like
         WHERE feed_id = 68
           AND user_id = 6
 {executed in 0 msec}
[2024-12-09 12:46:37 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_like
           SET feed_id = 68
             , user_id = 6
 {executed in 2 msec}
[2024-12-09 12:46:38 INFO http-nio-8080-exec-4] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@2c67b3a8
[2024-12-09 12:46:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 67
           AND user_id = 6
 {executed in 0 msec}
[2024-12-09 12:46:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 67
             , user_id = 6
 {executed in 2 msec}
[2024-12-09 12:46:39 INFO http-nio-8080-exec-10] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@c85c0da
[2024-12-09 12:46:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 37
           AND user_id = 6
 {executed in 0 msec}
[2024-12-09 12:46:39 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 37
             , user_id = 6
 {executed in 1 msec}
[2024-12-09 12:46:40 INFO http-nio-8080-exec-6] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@60d68f3b
[2024-12-09 12:46:40 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM feed_like
         WHERE feed_id = 36
           AND user_id = 6
 {executed in 1 msec}
[2024-12-09 12:46:40 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_like
           SET feed_id = 36
             , user_id = 6
 {executed in 2 msec}
[2024-12-09 12:46:42 INFO http-nio-8080-exec-5] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@ce126e5
[2024-12-09 12:46:42 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 35
           AND user_id = 6
 {executed in 0 msec}
[2024-12-09 12:46:42 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 35
             , user_id = 6
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 6
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6, profileUserId=null)
[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 6

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:47:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:05 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=6, profileUserId=7)
[2024-12-09 12:47:05 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 6
[2024-12-09 12:47:05 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6, profileUserId=7)
[2024-12-09 12:47:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 6, 1, 0))
        + MAX(IF(F2.to_user_id = 6, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 7
 {executed in 1 msec}
[2024-12-09 12:47:05 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 6

            WHERE a.writer_user_id = 7

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:47:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|------------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname    |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|------------|---------|----------|----------|----------------|------------|
|7       |fec2385f-433d-4701-a841-9489730c9238.gif |2024-12-06 13:08:15 |내가 못뚫을지 알아? |0        |1         |3         |0               |0           |
|--------|-----------------------------------------|--------------------|------------|---------|----------|----------|----------------|------------|

[2024-12-09 12:47:05 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:47:05 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:47:05 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:47:05 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:05 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:05 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:47:05 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:47:05 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:05 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:05 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:47:05 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:47:05 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:05 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:05 INFO http-nio-8080-exec-6] [com.green.greengram.user.follow.UserFollowController] UserFollowController > postUserFollow > p: UserFollowReq(fromUserId=6, toUserId=7)
[2024-12-09 12:47:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO user_follow
          SET from_user_id = 6
            , to_user_id = 7
 {executed in 3 msec}
[2024-12-09 12:47:13 INFO http-nio-8080-exec-5] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@34669c61
[2024-12-09 12:47:13 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 60
           AND user_id = 6
 {executed in 0 msec}
[2024-12-09 12:47:13 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 60
             , user_id = 6
 {executed in 2 msec}
[2024-12-09 12:47:14 INFO http-nio-8080-exec-8] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@68038d2e
[2024-12-09 12:47:14 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 54
           AND user_id = 6
 {executed in 0 msec}
[2024-12-09 12:47:14 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 54
             , user_id = 6
 {executed in 2 msec}
[2024-12-09 12:47:16 INFO http-nio-8080-exec-7] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@541cf85a
[2024-12-09 12:47:16 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 52
           AND user_id = 6
 {executed in 0 msec}
[2024-12-09 12:47:16 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 52
             , user_id = 6
 {executed in 3 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 6
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=6, profileUserId=null)
[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 6

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:47:19 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:19 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:24 INFO http-nio-8080-exec-1] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@4c677ff
[2024-12-09 12:47:24 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM feed_like
         WHERE feed_id = 33
           AND user_id = 6
 {executed in 1 msec}
[2024-12-09 12:47:24 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_like
           SET feed_id = 33
             , user_id = 6
 {executed in 2 msec}
[2024-12-09 12:47:25 INFO http-nio-8080-exec-4] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@2febba1d
[2024-12-09 12:47:25 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 32
           AND user_id = 6
 {executed in 1 msec}
[2024-12-09 12:47:25 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 32
             , user_id = 6
 {executed in 1 msec}
[2024-12-09 12:47:26 INFO http-nio-8080-exec-10] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@65a7ed00
[2024-12-09 12:47:26 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 31
           AND user_id = 6
 {executed in 0 msec}
[2024-12-09 12:47:26 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 31
             , user_id = 6
 {executed in 2 msec}
[2024-12-09 12:47:38 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '222'
 {executed in 0 msec}
[2024-12-09 12:47:38 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|------------------------------------------|
|user_id |nickname |upw                                                          |pic                                       |
|--------|---------|-------------------------------------------------------------|------------------------------------------|
|4       |222      |$2a$10$nLhYiYwYLMc3C6zvjjnDS.KGVXZZ0yQy2KO6MLWqDor8remOBB86e |fac13e30-251f-4464-8ad2-9e4d7e9596da.webp |
|--------|---------|-------------------------------------------------------------|------------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '222'
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|------------------------------------------|
|user_id |nickname |upw                                                          |pic                                       |
|--------|---------|-------------------------------------------------------------|------------------------------------------|
|4       |222      |$2a$10$nLhYiYwYLMc3C6zvjjnDS.KGVXZZ0yQy2KO6MLWqDor8remOBB86e |fac13e30-251f-4464-8ad2-9e4d7e9596da.webp |
|--------|---------|-------------------------------------------------------------|------------------------------------------|

[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 4
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=4, profileUserId=null)
[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 4

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:47:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:41 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:42 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=4, profileUserId=1)
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 4
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=4, profileUserId=1)
[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 4, 1, 0))
        + MAX(IF(F2.to_user_id = 4, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 2 msec}
[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 4

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |4        |2         |18        |25              |3           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:47:42 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:47:42 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:47:45 INFO http-nio-8080-exec-5] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@f736fe6
[2024-12-09 12:47:45 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 69
           AND user_id = 4
 {executed in 0 msec}
[2024-12-09 12:47:45 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 69
             , user_id = 4
 {executed in 2 msec}
[2024-12-09 12:47:47 INFO http-nio-8080-exec-8] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@7f63ab20
[2024-12-09 12:47:47 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 68
           AND user_id = 4
 {executed in 0 msec}
[2024-12-09 12:47:47 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 68
             , user_id = 4
 {executed in 2 msec}
[2024-12-09 12:47:48 INFO http-nio-8080-exec-3] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@10891620
[2024-12-09 12:47:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 67
           AND user_id = 4
 {executed in 0 msec}
[2024-12-09 12:47:48 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 67
             , user_id = 4
 {executed in 2 msec}
[2024-12-09 12:47:49 INFO http-nio-8080-exec-7] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@5a0ad0a9
[2024-12-09 12:47:49 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 37
           AND user_id = 4
 {executed in 0 msec}
[2024-12-09 12:47:49 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 37
             , user_id = 4
 {executed in 2 msec}
[2024-12-09 12:47:49 INFO http-nio-8080-exec-9] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@c97e803
[2024-12-09 12:47:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 36
           AND user_id = 4
 {executed in 0 msec}
[2024-12-09 12:47:49 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 36
             , user_id = 4
 {executed in 4 msec}
[2024-12-09 12:47:50 INFO http-nio-8080-exec-1] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@6afda4ae
[2024-12-09 12:47:50 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM feed_like
         WHERE feed_id = 35
           AND user_id = 4
 {executed in 0 msec}
[2024-12-09 12:47:50 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_like
           SET feed_id = 35
             , user_id = 4
 {executed in 3 msec}
[2024-12-09 12:47:51 INFO http-nio-8080-exec-2] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@63a0a14c
[2024-12-09 12:47:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 34
           AND user_id = 4
 {executed in 0 msec}
[2024-12-09 12:47:51 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 34
             , user_id = 4
 {executed in 1 msec}
[2024-12-09 12:47:52 INFO http-nio-8080-exec-4] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@57fc1dfb
[2024-12-09 12:47:52 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 33
           AND user_id = 4
 {executed in 0 msec}
[2024-12-09 12:47:52 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 33
             , user_id = 4
 {executed in 3 msec}
[2024-12-09 12:47:58 INFO http-nio-8080-exec-5] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=4, profileUserId=1)
[2024-12-09 12:47:58 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 2, size: null, signeduserId: 4
[2024-12-09 12:47:58 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=4, profileUserId=4)
[2024-12-09 12:47:58 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 4

            WHERE a.writer_user_id = 4

        ORDER BY a.feed_id desc
        LIMIT 20, 20
 {executed in 0 msec}
[2024-12-09 12:47:58 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 12:47:58 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 4, 1, 0))
        + MAX(IF(F2.to_user_id = 4, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:47:58 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |4        |2         |18        |33              |3           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '123'
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|1       |123      |$2a$10$QHlpSAdmPSj6e9fC2GBASOnxdg.lQw5bW5Mkx8554Cxc4/O1QFLkO |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:48:02 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:02 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:48:03 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |4        |2         |18        |33              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:48:03 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:03 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 1 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 1 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:48:05 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:48:05 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:51:44 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |4        |2         |18        |33              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 12:51:44 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 12:51:44 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 12:57:29 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
[2024-12-09 12:57:29 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:57:29 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 12:57:29 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 12:57:29 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1444 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 12:57:29 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:57:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:57:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:57:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:57:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:57:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:57:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 211 ms
[2024-12-09 12:57:29 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 12:57:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:57:29 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:57:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:57:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:57:30 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.396 seconds (process running for 834.845)
[2024-12-09 12:57:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 12:58:22 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-09 12:58:22 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:58:22 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1444 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 12:58:22 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 12:58:22 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 12:58:22 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:58:22 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 12:58:22 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 12:58:22 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 12:58:22 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 191 ms
[2024-12-09 12:58:22 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 12:58:22 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 12:58:23 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 12:58:23 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 12:58:23 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 12:58:23 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.341 seconds (process running for 887.881)
[2024-12-09 12:58:23 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 13:03:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1948 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 13:03:46 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 13:03:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 13:03:46 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 13:03:47 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 13:03:47 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 13:03:47 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 13:03:47 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 13:03:47 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 13:03:47 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 948 ms
[2024-12-09 13:03:47 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 13:03:47 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 13:03:47 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 13:03:47 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 13:03:47 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 13:04:00 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 172 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 13:04:00 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 13:04:00 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 13:04:00 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 13:04:00 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 13:04:00 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 13:04:00 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 13:04:00 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 13:04:00 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 13:04:00 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 816 ms
[2024-12-09 13:04:00 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 13:04:01 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 13:04:01 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 13:04:01 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 13:04:01 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 13:04:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 3344 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 13:04:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 13:04:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 13:04:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 13:04:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 13:04:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 13:04:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 13:04:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 13:04:58 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 13:04:58 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 796 ms
[2024-12-09 13:04:58 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 13:04:59 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 13:04:59 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 13:04:59 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 13:04:59 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 13:06:03 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9968 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 13:06:03 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 13:06:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 13:06:03 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 13:06:03 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 13:06:03 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 13:06:03 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 13:06:03 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 13:06:03 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 13:06:03 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 787 ms
[2024-12-09 13:06:03 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 13:06:04 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 13:06:04 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 13:06:04 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 13:06:04 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 14:18:16 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1868 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 14:18:16 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 14:18:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 14:18:16 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 14:18:17 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 14:18:17 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 14:18:17 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 14:18:17 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 14:18:17 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 14:18:17 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 786 ms
[2024-12-09 14:18:17 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 14:18:17 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 14:18:17 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 14:18:17 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 14:18:17 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 15:12:31 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 11064 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:12:31 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:12:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:12:31 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:12:32 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:12:32 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:12:32 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:12:32 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:12:32 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:12:32 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 795 ms
[2024-12-09 15:12:32 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:12:32 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 15:12:32 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 15:12:32 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 15:12:32 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 15:14:13 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1944 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:14:13 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:14:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:14:13 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:14:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:14:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:14:14 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:14:14 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:14:14 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:14:14 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 877 ms
[2024-12-09 15:14:14 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:14:14 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 15:14:14 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 15:14:14 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 15:14:14 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 15:14:58 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6032 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:14:58 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:14:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:14:58 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:14:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:14:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:14:59 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:14:59 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:14:59 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:14:59 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 870 ms
[2024-12-09 15:14:59 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:14:59 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 15:14:59 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 15:14:59 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 15:14:59 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 15:15:37 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9056 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:15:37 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:15:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:15:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:15:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:15:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:15:38 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:15:38 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:15:38 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:15:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 860 ms
[2024-12-09 15:15:38 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:15:39 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 15:15:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 15:15:39 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 15:15:39 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 15:15:54 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1948 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:15:54 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:15:54 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:15:54 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:15:55 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:15:55 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:15:55 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:15:55 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:15:55 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:15:55 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 877 ms
[2024-12-09 15:15:55 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:15:55 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 15:15:55 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 15:15:55 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 15:15:55 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 15:16:24 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10556 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:16:24 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:16:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:16:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:16:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:16:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:16:25 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:16:25 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:16:25 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:16:25 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 867 ms
[2024-12-09 15:16:25 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:16:26 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 15:16:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 15:16:26 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 15:16:26 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 15:16:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9056 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:16:57 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:16:57 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:16:57 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:16:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:16:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:16:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:16:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:16:58 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:16:58 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 862 ms
[2024-12-09 15:16:58 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:16:58 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 15:16:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 15:16:58 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 15:16:58 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 15:17:26 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10808 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:17:26 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:17:26 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:17:26 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:17:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:17:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:17:26 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:17:26 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:17:26 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:17:26 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 871 ms
[2024-12-09 15:17:26 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:17:27 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 15:17:27 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 15:17:27 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 15:17:27 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 15:17:35 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 1408 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:17:35 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:17:35 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:17:35 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:17:36 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:17:36 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:17:36 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:17:36 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:17:36 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:17:36 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 850 ms
[2024-12-09 15:17:36 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:17:36 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 15:17:36 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 15:17:36 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 15:17:36 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 15:18:20 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6004 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:18:20 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:18:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:18:20 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:18:21 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:18:21 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:18:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:18:21 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:18:21 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:18:21 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 814 ms
[2024-12-09 15:18:21 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:18:21 WARN restartedMain] [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userController' defined in file [D:\jju\GreenGramVer3\build\classes\java\main\com\green\greengram\user\UserController.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'org.springframework.boot.info.BuildProperties' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
[2024-12-09 15:18:21 INFO restartedMain] [org.apache.catalina.core.StandardService] Stopping service [Tomcat]
[2024-12-09 15:18:21 INFO restartedMain] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
[2024-12-09 15:18:21 ERRORrestartedMain] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.green.greengram.user.UserController required a bean of type 'org.springframework.boot.info.BuildProperties' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.boot.info.BuildProperties' in your configuration.

[2024-12-09 15:20:10 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10912 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:20:10 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:20:10 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:20:10 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:20:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:20:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:20:10 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:20:10 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:20:10 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:20:10 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 789 ms
[2024-12-09 15:20:10 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:20:11 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:20:11 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:20:11 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:20:11 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:20:11 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.671 seconds (process running for 2.038)
[2024-12-09 15:20:24 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 8500 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:20:24 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:20:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:20:24 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:20:25 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:20:25 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:20:25 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:20:25 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:20:25 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:20:25 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 858 ms
[2024-12-09 15:20:25 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:20:26 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:20:26 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:20:26 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:20:26 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:20:26 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.816 seconds (process running for 2.246)
[2024-12-09 15:21:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 6908 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:21:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:21:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:21:28 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:21:29 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:21:29 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:21:29 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:21:29 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:21:29 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:21:29 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 858 ms
[2024-12-09 15:21:29 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:21:29 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:21:30 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:21:30 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:21:30 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:21:30 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.837 seconds (process running for 2.257)
[2024-12-09 15:24:30 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10756 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:24:30 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:24:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:24:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:24:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:24:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:24:31 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:24:31 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:24:31 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:24:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 889 ms
[2024-12-09 15:24:31 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:24:31 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:24:31 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:24:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:24:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:24:31 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.872 seconds (process running for 2.297)
[2024-12-09 15:24:43 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5776 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:24:43 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:24:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:24:43 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:24:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:24:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:24:44 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:24:44 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:24:44 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:24:44 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 885 ms
[2024-12-09 15:24:44 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:24:44 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:24:44 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:24:44 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:24:44 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:24:44 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.872 seconds (process running for 2.337)
[2024-12-09 15:32:47 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 3 class path changes (0 additions, 0 deletions, 3 modifications)
[2024-12-09 15:32:47 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:32:47 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5776 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:32:47 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:32:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:32:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:32:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:32:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:32:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:32:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 248 ms
[2024-12-09 15:32:48 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:32:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:32:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:32:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:32:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:32:48 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.447 seconds (process running for 485.89)
[2024-12-09 15:32:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:33:18 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 2200 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:33:18 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:33:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:33:18 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:33:19 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:33:19 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:33:19 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:33:19 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:33:19 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:33:19 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 865 ms
[2024-12-09 15:33:19 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:33:19 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:33:20 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:33:20 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:33:20 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:33:20 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.851 seconds (process running for 2.301)
[2024-12-09 15:33:47 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4648 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:33:47 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:33:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:33:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:33:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:33:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:33:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:33:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:33:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:33:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 887 ms
[2024-12-09 15:33:48 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:33:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:33:49 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:33:49 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:33:49 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:33:49 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.881 seconds (process running for 2.323)
[2024-12-09 15:37:38 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 30 class path changes (0 additions, 0 deletions, 30 modifications)
[2024-12-09 15:37:38 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:37:38 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4648 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:37:38 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:37:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:37:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:37:38 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:37:38 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:37:38 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:37:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 242 ms
[2024-12-09 15:37:38 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:37:38 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:37:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:37:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:37:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:37:38 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.414 seconds (process running for 232.009)
[2024-12-09 15:37:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:38:45 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-09 15:38:45 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:38:45 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4648 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:38:45 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:38:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:38:45 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:38:45 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:38:45 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:38:45 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:38:45 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 220 ms
[2024-12-09 15:38:45 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:38:45 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:38:45 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:38:45 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:38:45 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:38:45 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.392 seconds (process running for 298.98)
[2024-12-09 15:38:45 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:39:37 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 27 class path changes (0 additions, 0 deletions, 27 modifications)
[2024-12-09 15:39:37 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:39:37 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4648 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:39:37 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:39:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:39:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:39:37 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:39:37 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:39:37 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:39:37 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 218 ms
[2024-12-09 15:39:37 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:39:37 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:39:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:39:37 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:39:37 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:39:37 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.4 seconds (process running for 350.772)
[2024-12-09 15:39:37 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:51:30 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4316 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:51:30 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:51:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:51:30 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:51:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:51:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:51:31 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:51:31 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:51:31 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:51:31 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 792 ms
[2024-12-09 15:51:31 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:51:31 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:51:31 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:51:31 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:51:31 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:51:31 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.693 seconds (process running for 2.072)
[2024-12-09 15:51:38 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:51:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:51:38 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3b56bb30
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 15:51:39 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:39 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 15:51:42 INFO http-nio-8080-exec-5] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |4        |2         |18        |33              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 15:51:42 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:51:42 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:51:46 INFO http-nio-8080-exec-7] [com.green.greengram.user.UserController] UserController > patchProfilePic > p: UserPicPatchReq(signedUserId=1, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5b2ec0d4, picName=null)
[2024-12-09 15:51:46 WARN http-nio-8080-exec-7] [org.mariadb.jdbc.message.server.ErrorPacket] Error: 1064-42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE user_id = 1' at line 4
[2024-12-09 15:51:46 ERRORhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user

        WHERE user_id = 1
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=164) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE user_id = 1' at line 4
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.updUserPic(Unknown Source)
	at com.green.greengram.user.UserService.patchUserPic(UserService.java:91)
	at com.green.greengram.user.UserController.patchProfilePic(UserController.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 15:51:46 ERRORhttp-nio-8080-exec-7] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: (conn=164) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE user_id = 1' at line 4
### The error may exist in file [D:\jju\GreenGramVer3\build\resources\main\mappers\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: UPDATE user                     WHERE user_id = ?
### Cause: java.sql.SQLSyntaxErrorException: (conn=164) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE user_id = 1' at line 4
; bad SQL grammar []] with root cause
java.sql.SQLSyntaxErrorException: (conn=164) You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'WHERE user_id = 1' at line 4
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:93)
	at org.mariadb.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:276)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at jdk.proxy2/jdk.proxy2.$Proxy82.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy90.updUserPic(Unknown Source)
	at com.green.greengram.user.UserService.patchUserPic(UserService.java:91)
	at com.green.greengram.user.UserController.patchProfilePic(UserController.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2024-12-09 15:53:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 15:53:04 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 15:53:06 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4940 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:53:06 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:53:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:53:06 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:53:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:53:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:53:07 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:53:07 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:53:07 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:53:07 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 799 ms
[2024-12-09 15:53:07 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:53:07 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:53:07 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:53:07 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:53:07 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:53:07 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.688 seconds (process running for 2.034)
[2024-12-09 15:53:10 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:53:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:53:10 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@51b1e4b7
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|25              |팬이에요~           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|23              |이쁘시네요           |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 15:53:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 15:53:14 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |96f23637-9456-4dd1-8132-03e495868fbc.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 15:53:14 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |96f23637-9456-4dd1-8132-03e495868fbc.jpg |2024-11-28 12:40:23 |123      |4        |2         |18        |33              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 1 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|78              |28      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|77              |27      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|76              |26      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 1 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |96f23637-9456-4dd1-8132-03e495868fbc.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 15:53:14 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 15:53:14 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 15:53:16 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] UserController > patchProfilePic > p: UserPicPatchReq(signedUserId=1, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@782d9f6f, picName=null)
[2024-12-09 15:53:16 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
         SET pic = '52b55a71-a7ed-4896-9720-208ac0221dd7.webp' 

        WHERE user_id = 1
 {executed in 3 msec}
[2024-12-09 15:55:01 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
[2024-12-09 15:55:02 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:55:02 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 15:55:02 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 15:55:02 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 4940 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:55:02 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:55:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:55:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:55:02 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:55:02 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:55:02 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:55:02 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 201 ms
[2024-12-09 15:55:02 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:55:02 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:55:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:55:02 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:55:02 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:55:02 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.355 seconds (process running for 116.897)
[2024-12-09 15:55:02 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 15:55:16 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:55:16 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:55:16 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 15:55:16 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] UserController > patchProfilePic > p: UserPicPatchReq(signedUserId=1, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7513ae5e, picName=null)
[2024-12-09 15:55:16 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Starting...
[2024-12-09 15:55:16 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1dad53
[2024-12-09 15:55:16 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Start completed.
[2024-12-09 15:55:16 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE user
         SET pic = '9f3062a2-a7d7-41e1-83a4-9804947f74fb.jpg' 

        WHERE user_id = 1
 {executed in 3 msec}
[2024-12-09 15:56:47 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown initiated...
[2024-12-09 15:56:47 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-2 - Shutdown completed.
[2024-12-09 15:56:50 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 8740 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:56:50 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:56:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:56:50 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:56:50 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:56:50 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:56:50 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:56:50 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:56:50 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:56:50 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 875 ms
[2024-12-09 15:56:50 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:56:51 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:56:51 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:56:51 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:56:51 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:56:51 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.85 seconds (process running for 2.259)
[2024-12-09 15:58:47 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7900 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 15:58:47 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 15:58:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 15:58:47 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 15:58:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 15:58:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:58:48 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 15:58:48 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 15:58:48 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 15:58:48 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 800 ms
[2024-12-09 15:58:48 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 15:58:48 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 15:58:48 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 15:58:48 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 15:58:48 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 15:58:48 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.683 seconds (process running for 2.045)
[2024-12-09 15:59:05 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 15:59:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 15:59:05 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 15:59:05 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] UserController > patchProfilePic > p: UserPicPatchReq(signedUserId=1, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@346395f4, picName=null)
[2024-12-09 15:59:05 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 15:59:05 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@56ae434
[2024-12-09 15:59:05 INFO http-nio-8080-exec-1] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 15:59:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
         SET pic = '5d3ac307-091f-48d5-8288-243f132dee60.png' 

        WHERE user_id = 1
 {executed in 0 msec}
[2024-12-09 15:59:15 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] UserController > patchProfilePic > p: UserPicPatchReq(signedUserId=1, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6dfb37ce, picName=null)
[2024-12-09 15:59:15 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
         SET pic = '515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg' 

        WHERE user_id = 1
 {executed in 0 msec}
[2024-12-09 16:05:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
           SET uid = '444'
             , upw = '$2a$10$wOi0pANoyum8RErHqGSU7.Bmc2GeyKaYvlVBhowXYepQDnrDtVTPK'
             , nick_name = '444'
             , pic = NULL
 {executed in 0 msec}
[2024-12-09 16:05:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
           SET uid = '444'
             , upw = '$2a$10$wOi0pANoyum8RErHqGSU7.Bmc2GeyKaYvlVBhowXYepQDnrDtVTPK'
             , nick_name = '444'
             , pic = NULL
 {executed in 0 msec}
[2024-12-09 16:05:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|8         |
|----------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '444'
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|----|
|user_id |nickname |upw                                                          |pic |
|--------|---------|-------------------------------------------------------------|----|
|8       |444      |$2a$10$wOi0pANoyum8RErHqGSU7.Bmc2GeyKaYvlVBhowXYepQDnrDtVTPK |null|
|--------|---------|-------------------------------------------------------------|----|

[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 8
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 8

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 1 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|78              |28      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|77              |27      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|76              |26      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|25              |팬이에요~           |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|23              |이쁘시네요           |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:05:34 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:05:34 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:05:38 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 8
[2024-12-09 16:05:38 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=8)
[2024-12-09 16:05:38 INFO http-nio-8080-exec-8] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=8, profileUserId=8)
[2024-12-09 16:05:38 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 8

            WHERE a.writer_user_id = 8

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:05:38 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 16:05:38 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 8, 1, 0))
        + MAX(IF(F2.to_user_id = 8, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 8
 {executed in 0 msec}
[2024-12-09 16:05:38 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|8       |null|2024-12-09 16:05:31 |444      |0        |0         |0         |0               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:05:41 INFO http-nio-8080-exec-7] [com.green.greengram.user.UserController] UserController > patchProfilePic > p: UserPicPatchReq(signedUserId=8, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@63b9b81f, picName=null)
[2024-12-09 16:05:41 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
         SET pic = '04fc39e5-c454-4a83-8941-890df8bd2fc9.jpg' 

        WHERE user_id = 8
 {executed in 1 msec}
[2024-12-09 16:10:58 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-09 16:10:58 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:10:58 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 16:10:58 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 16:10:58 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7900 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 16:10:58 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:10:58 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:10:58 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:10:58 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:10:58 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:10:58 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:10:58 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 212 ms
[2024-12-09 16:10:58 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 16:10:58 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:10:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:10:59 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:10:59 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:10:59 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.399 seconds (process running for 732.252)
[2024-12-09 16:10:59 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 16:11:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7044 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 16:11:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:11:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 16:11:14 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 16:11:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:11:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:11:14 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:11:14 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:11:14 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:11:14 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 808 ms
[2024-12-09 16:11:14 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 16:11:15 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:11:15 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:11:15 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:11:15 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:11:15 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.711 seconds (process running for 2.098)
[2024-12-09 16:11:19 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 16:11:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 16:11:19 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 8
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=null)
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@46eaa006
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 8

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 1 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 1 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|78              |28      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|77              |27      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|76              |26      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|25              |팬이에요~           |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|23              |이쁘시네요           |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:11:20 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:20 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:22 INFO http-nio-8080-exec-5] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 8
[2024-12-09 16:11:22 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=8, profileUserId=8)
[2024-12-09 16:11:22 INFO http-nio-8080-exec-8] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=8, profileUserId=8)
[2024-12-09 16:11:22 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 8

            WHERE a.writer_user_id = 8

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:11:22 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 16:11:22 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 8, 1, 0))
        + MAX(IF(F2.to_user_id = 8, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 8
 {executed in 0 msec}
[2024-12-09 16:11:22 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|8       |04fc39e5-c454-4a83-8941-890df8bd2fc9.jpg |2024-12-09 16:05:31 |444      |0        |0         |0         |0               |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:11:24 INFO http-nio-8080-exec-9] [com.green.greengram.user.UserController] UserController > patchProfilePic > p: UserPicPatchReq(signedUserId=8, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2df95d73, picName=null)
[2024-12-09 16:11:24 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
         SET pic = 'b1bdd6ed-7ef5-49b6-be9e-8fa376493270.jpg' 

        WHERE user_id = 8
 {executed in 3 msec}
[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '123'
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|1       |123      |$2a$10$QHlpSAdmPSj6e9fC2GBASOnxdg.lQw5bW5Mkx8554Cxc4/O1QFLkO |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 1 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 1 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|78              |28      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|77              |27      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|76              |26      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|25              |팬이에요~           |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|23              |이쁘시네요           |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:11:31 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:31 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:32 INFO http-nio-8080-exec-8] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 16:11:32 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:11:32 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 16:11:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 2 msec}
[2024-12-09 16:11:32 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 2 msec}
[2024-12-09 16:11:32 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |2024-11-28 12:40:23 |123      |4        |2         |18        |33              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:11:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:11:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:11:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:11:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:11:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:11:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:11:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|78              |28      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|77              |27      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|76              |26      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |515427cb-75fb-4070-ac80-bd0d4fe5e299.jpg |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 1 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 16:11:33 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:11:33 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:18:43 INFO http-nio-8080-exec-3] [com.green.greengram.user.UserController] UserController > patchProfilePic > p: UserPicPatchReq(signedUserId=1, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@285fa613, picName=null)
[2024-12-09 16:18:43 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
         SET pic = '7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif' 

        WHERE user_id = 1
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 1 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 1 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|78              |28      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|77              |27      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|76              |26      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 1 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|25              |팬이에요~           |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|23              |이쁘시네요           |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:22:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:22:13 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |2024-11-28 12:40:23 |123      |4        |2         |18        |33              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|69      |             |         |2024-12-09 12:07:21 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|78              |28      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|77              |27      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|76              |26      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 16:22:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:22:13 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:23:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
2. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:23:28 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|70        |
|----------|

[2024-12-09 16:23:28 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            70, 'bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif'
         )
 {executed in 0 msec}
[2024-12-09 16:23:28 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|70      |             |         |2024-12-09 16:23:28 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|69      |             |         |2024-12-09 12:07:21 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|78              |28      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|77              |27      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|76              |26      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|25              |팬이에요~           |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|23              |이쁘시네요           |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 1 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:23:32 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:23:32 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:23:38 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |2024-11-28 12:40:23 |123      |4        |2         |19        |33              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|70      |             |         |2024-12-09 16:23:28 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|69      |             |         |2024-12-09 12:07:21 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|78              |28      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|77              |27      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|76              |26      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 1 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 16:23:38 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:23:38 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:23:41 INFO http-nio-8080-exec-5] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@4e14bb37
[2024-12-09 16:23:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 70
           AND user_id = 1
 {executed in 0 msec}
[2024-12-09 16:23:41 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 70
             , user_id = 1
 {executed in 3 msec}
[2024-12-09 16:25:53 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:25:53 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '1'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:25:53 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|71        |
|----------|

[2024-12-09 16:25:53 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            71, '382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif'
         )
 {executed in 1 msec}
[2024-12-09 16:25:53 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|70      |             |         |2024-12-09 16:23:28 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 1 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 1 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|78              |28      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|77              |27      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|76              |26      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|25              |팬이에요~           |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|23              |이쁘시네요           |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:26:05 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:26:05 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:28:52 INFO http-nio-8080-exec-8] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@4c014e6
[2024-12-09 16:28:52 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. DELETE FROM feed_like
         WHERE feed_id = 71
           AND user_id = 1
 {executed in 1 msec}
[2024-12-09 16:28:52 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_like
           SET feed_id = 71
             , user_id = 1
 {executed in 1 msec}
[2024-12-09 16:32:28 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-09 16:32:28 INFO Thread-5] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:32:28 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 16:32:28 INFO Thread-5] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 16:32:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7044 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 16:32:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:32:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:32:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:32:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:32:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:32:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:32:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 206 ms
[2024-12-09 16:32:28 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 16:32:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:32:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:32:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:32:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:32:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.394 seconds (process running for 1275.189)
[2024-12-09 16:32:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 16:33:09 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-09 16:33:09 INFO Thread-7] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:33:09 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7044 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 16:33:09 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:33:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:33:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:33:10 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:33:10 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:33:10 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:33:10 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 191 ms
[2024-12-09 16:33:10 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 16:33:10 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:33:10 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:33:10 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:33:10 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:33:10 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.338 seconds (process running for 1316.787)
[2024-12-09 16:33:10 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 16:36:11 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-09 16:36:11 INFO Thread-11] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:36:11 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7044 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 16:36:11 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:36:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:36:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:36:12 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:36:12 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:36:12 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:36:12 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 199 ms
[2024-12-09 16:36:12 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 16:36:12 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:36:12 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:36:12 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:36:12 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:36:12 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.345 seconds (process running for 1498.852)
[2024-12-09 16:36:12 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 16:36:38 INFO File Watcher] [org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener] Restarting due to 2 class path changes (0 additions, 0 deletions, 2 modifications)
[2024-12-09 16:36:38 INFO Thread-15] [org.apache.coyote.http11.Http11NioProtocol] Stopping ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:36:38 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 7044 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 16:36:38 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:36:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:36:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:36:38 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:36:38 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:36:38 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:36:38 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 179 ms
[2024-12-09 16:36:38 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 16:36:38 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:36:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:36:38 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:36:38 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:36:38 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 0.323 seconds (process running for 1525.185)
[2024-12-09 16:36:38 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener] Condition evaluation unchanged
[2024-12-09 16:37:27 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 5788 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 16:37:27 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:37:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 16:37:27 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 16:37:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:37:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:37:28 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:37:28 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:37:28 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:37:28 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 799 ms
[2024-12-09 16:37:28 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 16:37:28 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:37:28 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:37:28 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:37:28 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:37:28 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.681 seconds (process running for 2.063)
[2024-12-09 16:37:36 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 16:37:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 16:37:36 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3eb98efe
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|70      |             |         |2024-12-09 16:23:28 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 1 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 1 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 1 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|78              |28      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|77              |27      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|76              |26      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|25              |팬이에요~           |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|23              |이쁘시네요           |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 1 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:37:36 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:36 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 16:37:40 INFO http-nio-8080-exec-2] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|70      |             |         |2024-12-09 16:23:28 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:37:40 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |2024-11-28 12:40:23 |123      |4        |2         |20        |35              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|78              |28      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|77              |27      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|76              |26      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |7bfb5a3e-143c-4ac8-9925-7fa920198f41.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 16:37:40 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:37:40 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:37:48 INFO http-nio-8080-exec-1] [com.green.greengram.user.UserController] UserController > patchProfilePic > p: UserPicPatchReq(signedUserId=1, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@76181d89, picName=null)
[2024-12-09 16:37:48 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
         SET pic = '3083d279-2bfd-43c8-bb7d-549ace54dbd2.gif' 

        WHERE user_id = 1
 {executed in 3 msec}
[2024-12-09 16:37:52 INFO http-nio-8080-exec-4] [com.green.greengram.user.UserController] UserController > patchProfilePic > p: UserPicPatchReq(signedUserId=1, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@d15887b, picName=null)
[2024-12-09 16:37:52 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
         SET pic = '8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif' 

        WHERE user_id = 1
 {executed in 3 msec}
[2024-12-09 16:37:57 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '555'
 {executed in 0 msec}
[2024-12-09 16:37:57 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|----|----|
|user_id |nickname |upw |pic |
|--------|---------|----|----|
|--------|---------|----|----|

[2024-12-09 16:38:04 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
           SET uid = '555'
             , upw = '$2a$10$9ZtXRnRoUh0gp/i/tW32aew2nZIY6Z9wEQrafp/YOERJ76gG4ta0e'
             , nick_name = '555'
             , pic = NULL
 {executed in 3 msec}
[2024-12-09 16:38:04 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
           SET uid = '555'
             , upw = '$2a$10$9ZtXRnRoUh0gp/i/tW32aew2nZIY6Z9wEQrafp/YOERJ76gG4ta0e'
             , nick_name = '555'
             , pic = NULL
 {executed in 0 msec}
[2024-12-09 16:38:04 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|9         |
|----------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '555'
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|----|
|user_id |nickname |upw                                                          |pic |
|--------|---------|-------------------------------------------------------------|----|
|9       |555      |$2a$10$9ZtXRnRoUh0gp/i/tW32aew2nZIY6Z9wEQrafp/YOERJ76gG4ta0e |null|
|--------|---------|-------------------------------------------------------------|----|

[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 9
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=9, profileUserId=null)
[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 9

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|70      |             |         |2024-12-09 16:23:28 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|69      |             |         |2024-12-09 12:07:21 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 1 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 1 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|25              |팬이에요~           |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|23              |이쁘시네요           |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:38:06 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:06 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:08 INFO http-nio-8080-exec-5] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=9, profileUserId=9)
[2024-12-09 16:38:08 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 9
[2024-12-09 16:38:08 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=9, profileUserId=9)
[2024-12-09 16:38:08 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 9, 1, 0))
        + MAX(IF(F2.to_user_id = 9, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 9
 {executed in 2 msec}
[2024-12-09 16:38:08 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|
|9       |null|2024-12-09 16:38:04 |555      |0        |0         |0         |0               |0           |
|--------|----|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:38:08 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 9

            WHERE a.writer_user_id = 9

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:38:08 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|---------|---------|-----------|--------|---------|----|-------|
|feed_id |contents |location |created_at |user_id |writernm |pic |islike |
|--------|---------|---------|-----------|--------|---------|----|-------|
|--------|---------|---------|-----------|--------|---------|----|-------|

[2024-12-09 16:38:11 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserController > patchProfilePic > p: UserPicPatchReq(signedUserId=9, pic=org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@73e75803, picName=null)
[2024-12-09 16:38:11 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE user
         SET pic = '61b41e26-6ed7-4426-893d-44fc7c0f3a86.gif' 

        WHERE user_id = 9
 {executed in 2 msec}
[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = '123'
 {executed in 1 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|user_id |nickname |upw                                                          |pic                                      |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|
|1       |123      |$2a$10$QHlpSAdmPSj6e9fC2GBASOnxdg.lQw5bW5Mkx8554Cxc4/O1QFLkO |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|--------|---------|-------------------------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |             |         |2024-12-09 16:23:28 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 1 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|25              |팬이에요~           |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|23              |이쁘시네요           |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 1 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:38:26 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:26 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:28 INFO http-nio-8080-exec-5] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 2 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |2024-11-28 12:40:23 |123      |4        |2         |20        |35              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |             |         |2024-12-09 16:23:28 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 1 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 16:38:28 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:38:28 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 7
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=7, profileUserId=null)
[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 7

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|70      |             |         |2024-12-09 16:23:28 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|69      |             |         |2024-12-09 12:07:21 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무        |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무        |null                                     |0      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|25              |팬이에요~           |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|23              |이쁘시네요           |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 1 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:41:01 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:41:01 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:41:11 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = ''
             , location = ''
 {executed in 1 msec}
[2024-12-09 16:41:11 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:41:11 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|72        |
|----------|

[2024-12-09 16:41:11 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            72, '0461963e-f147-4cbd-9cbe-c9de5a85675d.gif'
         )
 {executed in 0 msec}
[2024-12-09 16:41:11 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 16:41:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 16:41:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 16:41:12 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 10528 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 16:41:12 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 16:41:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 16:41:12 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 16:41:13 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 16:41:13 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:41:13 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 16:41:13 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 16:41:13 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 16:41:13 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 827 ms
[2024-12-09 16:41:13 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 16:41:14 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 16:41:14 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 16:41:14 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 16:41:14 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 16:41:14 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.728 seconds (process running for 2.098)
[2024-12-09 16:41:14 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 16:41:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 16:41:14 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 0 ms
[2024-12-09 16:41:23 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 16:41:24 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@b637458
[2024-12-09 16:41:24 INFO http-nio-8080-exec-7] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 16:41:24 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = ''
             , location = ''
 {executed in 1 msec}
[2024-12-09 16:41:24 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:41:24 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|73        |
|----------|

[2024-12-09 16:41:24 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            73, 'dd7d3fe7-8656-4c29-a0ce-311b72eb2438.gif'
         )
 {executed in 0 msec}
[2024-12-09 16:41:24 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 16:41:27 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '7'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:41:27 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '7'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:41:27 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|74        |
|----------|

[2024-12-09 16:41:27 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            74, '3d74004f-12f4-4991-92be-ac91a14cc40f.gif'
         )
 {executed in 0 msec}
[2024-12-09 16:41:27 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|74      |             |         |2024-12-09 16:41:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|73      |             |         |2024-12-09 16:41:24 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|72      |             |         |2024-12-09 16:41:11 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|71      |             |         |2024-12-09 16:25:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |             |         |2024-12-09 16:23:28 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 74
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3d74004f-12f4-4991-92be-ac91a14cc40f.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 74
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dd7d3fe7-8656-4c29-a0ce-311b72eb2438.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 73
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0461963e-f147-4cbd-9cbe-c9de5a85675d.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 72
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 1 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 1 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:42:22 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:42:22 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:42:42 INFO http-nio-8080-exec-6] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@3773c0e4
[2024-12-09 16:42:42 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 74
           AND user_id = 1
 {executed in 0 msec}
[2024-12-09 16:42:42 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 74
             , user_id = 1
 {executed in 3 msec}
[2024-12-09 16:42:44 INFO http-nio-8080-exec-2] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@746d0711
[2024-12-09 16:42:44 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 73
           AND user_id = 1
 {executed in 0 msec}
[2024-12-09 16:42:44 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 73
             , user_id = 1
 {executed in 1 msec}
[2024-12-09 16:42:46 INFO http-nio-8080-exec-1] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@2a02c05e
[2024-12-09 16:42:46 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 72
           AND user_id = 1
 {executed in 0 msec}
[2024-12-09 16:42:46 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 72
             , user_id = 1
 {executed in 3 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 16:43:51 INFO http-nio-8080-exec-9] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 2 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |             |         |2024-12-09 16:23:28 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 1 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |2024-11-28 12:40:23 |123      |4        |2         |20        |35              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 1 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 1 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 16:43:51 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:43:51 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO user
           SET uid = 'a'
             , upw = '$2a$10$Qh6sKD9mOE6mz7W1FeuiCellCeYjk2wOoHG8URNxpt5WIZqdWoKk.'
             , nick_name = 'a'
             , pic = NULL
 {executed in 3 msec}
[2024-12-09 16:45:03 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO user
           SET uid = 'a'
             , upw = '$2a$10$Qh6sKD9mOE6mz7W1FeuiCellCeYjk2wOoHG8URNxpt5WIZqdWoKk.'
             , nick_name = 'a'
             , pic = NULL
 {executed in 0 msec}
[2024-12-09 16:45:03 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|10        |
|----------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT user_id as userId
             , IFNULL(nick_name, uid) as nickName 
             , upw, pic
          FROM user
         WHERE uid = 'a'
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|---------|-------------------------------------------------------------|----|
|user_id |nickname |upw                                                          |pic |
|--------|---------|-------------------------------------------------------------|----|
|10      |a        |$2a$10$Qh6sKD9mOE6mz7W1FeuiCellCeYjk2wOoHG8URNxpt5WIZqdWoKk. |null|
|--------|---------|-------------------------------------------------------------|----|

[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 10
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=10, profileUserId=null)
[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 10

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|74      |             |         |2024-12-09 16:41:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|73      |             |         |2024-12-09 16:41:24 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|72      |             |         |2024-12-09 16:41:11 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|71      |             |         |2024-12-09 16:25:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|70      |             |         |2024-12-09 16:23:28 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|69      |             |         |2024-12-09 12:07:21 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|68      |             |         |2024-12-09 12:07:13 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|67      |             |         |2024-12-09 12:07:03 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|60      |asd          |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd          |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd          |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |             |         |2024-12-04 16:20:54 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|36      |             |         |2024-12-04 16:19:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|35      |             |         |2024-12-04 16:19:09 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|34      |             |         |2024-12-04 16:16:57 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|33      |             |         |2024-12-04 16:08:11 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|--------|-------------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 74
 {executed in 1 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3d74004f-12f4-4991-92be-ac91a14cc40f.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 74
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dd7d3fe7-8656-4c29-a0ce-311b72eb2438.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 73
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0461963e-f147-4cbd-9cbe-c9de5a85675d.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 72
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:45:05 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:05 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:45:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:45:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
2. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:45:14 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|75        |
|----------|

[2024-12-09 16:45:14 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            75, 'df926f28-ff1e-48a5-b3b4-23cd1cea7821.gif'
         ),( 
            75, '6e9f4e83-2ba9-4301-a73c-948b75f2ff74.gif'
         )
 {executed in 16 msec}
[2024-12-09 16:45:14 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 2
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|75      |         |         |2024-12-09 16:45:14 |10      |a           |null                                     |0      |
|74      |         |         |2024-12-09 16:41:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|73      |         |         |2024-12-09 16:41:24 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|72      |         |         |2024-12-09 16:41:11 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|71      |         |         |2024-12-09 16:25:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |         |         |2024-12-09 16:23:28 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |         |         |2024-12-09 12:07:21 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |         |         |2024-12-09 12:07:13 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |         |         |2024-12-09 12:07:03 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |         |         |2024-12-04 16:20:54 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |         |         |2024-12-04 16:19:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|35      |         |         |2024-12-04 16:19:09 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |         |         |2024-12-04 16:16:57 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |         |         |2024-12-04 16:08:11 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린      |안과       |2024-12-04 15:55:20 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나      |         |2024-12-03 17:55:24 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa       |aa       |2024-12-03 17:50:55 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 1 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6e9f4e83-2ba9-4301-a73c-948b75f2ff74.gif |
|df926f28-ff1e-48a5-b3b4-23cd1cea7821.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 75
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 74
 {executed in 1 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3d74004f-12f4-4991-92be-ac91a14cc40f.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 74
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dd7d3fe7-8656-4c29-a0ce-311b72eb2438.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 73
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0461963e-f147-4cbd-9cbe-c9de5a85675d.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 72
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:45:18 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:18 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 INFO http-nio-8080-exec-9] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |2024-11-28 12:40:23 |123      |4        |2         |20        |35              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |             |         |2024-12-09 16:23:28 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 1 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 16:45:28 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:45:28 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:45:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:45:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:45:32 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|76        |
|----------|

[2024-12-09 16:45:32 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            76, '812fe35f-3dbe-4e1c-b214-a10f5871472a.gif'
         ),( 
            76, '87b517db-e9b2-46b4-91c4-a4b669f2cefa.gif'
         )
 {executed in 0 msec}
[2024-12-09 16:45:32 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 2
[2024-12-09 16:45:44 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:45:44 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:45:44 INFO http-nio-8080-exec-5] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|77        |
|----------|

[2024-12-09 16:45:44 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            77, '8cb03c1b-8891-485b-a4c4-9ca17c4555d0.gif'
         )
 {executed in 0 msec}
[2024-12-09 16:45:44 INFO http-nio-8080-exec-5] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 16:45:52 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:45:52 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
2. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:45:52 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|78        |
|----------|

[2024-12-09 16:45:52 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            78, '1d897d86-c30e-4302-a2c7-1b5045be9113.gif'
         ),( 
            78, '5d729d9e-e04a-4a5b-bd65-d3cd10c5b54a.gif'
         )
 {executed in 0 msec}
[2024-12-09 16:45:52 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 2
[2024-12-09 16:46:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:46:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:46:04 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|79        |
|----------|

[2024-12-09 16:46:04 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            79, '237b554e-bb3e-48a2-b61d-ad372ce50daa.gif'
         )
 {executed in 0 msec}
[2024-12-09 16:46:04 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 16:46:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:46:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:46:10 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|80        |
|----------|

[2024-12-09 16:46:10 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            80, 'a35be439-cac6-4043-be88-9195275fcdae.gif'
         )
 {executed in 0 msec}
[2024-12-09 16:46:10 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 16:46:24 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:46:24 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed
           SET writer_user_id = '10'
             , contents = ''
             , location = ''
 {executed in 0 msec}
[2024-12-09 16:46:24 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|81        |
|----------|

[2024-12-09 16:46:24 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_pic
        (feed_id, pic)
        VALUES
         (  
            81, 'b6e2bdac-9f50-4218-af1a-a5825a2d6c06.gif'
         )
 {executed in 0 msec}
[2024-12-09 16:46:24 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedService] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>resultPics : 1
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|81      |         |         |2024-12-09 16:46:24 |10      |a           |null                                     |0      |
|80      |         |         |2024-12-09 16:46:10 |10      |a           |null                                     |0      |
|79      |         |         |2024-12-09 16:46:04 |10      |a           |null                                     |0      |
|78      |         |         |2024-12-09 16:45:52 |10      |a           |null                                     |0      |
|77      |         |         |2024-12-09 16:45:44 |10      |a           |null                                     |0      |
|76      |         |         |2024-12-09 16:45:32 |10      |a           |null                                     |0      |
|75      |         |         |2024-12-09 16:45:14 |10      |a           |null                                     |0      |
|74      |         |         |2024-12-09 16:41:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|73      |         |         |2024-12-09 16:41:24 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|72      |         |         |2024-12-09 16:41:11 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|71      |         |         |2024-12-09 16:25:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |         |         |2024-12-09 16:23:28 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |         |         |2024-12-09 12:07:21 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |         |         |2024-12-09 12:07:13 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |         |         |2024-12-09 12:07:03 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |         |         |2024-12-04 16:20:54 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |         |         |2024-12-04 16:19:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 81
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6e2bdac-9f50-4218-af1a-a5825a2d6c06.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 81
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a35be439-cac6-4043-be88-9195275fcdae.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 80
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|237b554e-bb3e-48a2-b61d-ad372ce50daa.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 79
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1d897d86-c30e-4302-a2c7-1b5045be9113.gif |
|5d729d9e-e04a-4a5b-bd65-d3cd10c5b54a.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 78
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8cb03c1b-8891-485b-a4c4-9ca17c4555d0.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 77
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|812fe35f-3dbe-4e1c-b214-a10f5871472a.gif |
|87b517db-e9b2-46b4-91c4-a4b669f2cefa.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 76
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6e9f4e83-2ba9-4301-a73c-948b75f2ff74.gif |
|df926f28-ff1e-48a5-b3b4-23cd1cea7821.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 75
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 74
 {executed in 1 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3d74004f-12f4-4991-92be-ac91a14cc40f.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 74
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 1 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dd7d3fe7-8656-4c29-a0ce-311b72eb2438.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 73
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0461963e-f147-4cbd-9cbe-c9de5a85675d.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 72
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 1 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 1 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 1 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:46:41 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:46:41 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 INFO http-nio-8080-exec-10] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |2024-11-28 12:40:23 |123      |4        |2         |20        |35              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |             |         |2024-12-09 16:23:28 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 1 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 1 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 16:47:35 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:47:35 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:55:08 INFO http-nio-8080-exec-8] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@12aee1bc
[2024-12-09 16:55:08 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 6
           AND user_id = 1
 {executed in 2 msec}
[2024-12-09 16:55:08 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 6
             , user_id = 1
 {executed in 1 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|81      |         |         |2024-12-09 16:46:24 |10      |a           |null                                     |0      |
|80      |         |         |2024-12-09 16:46:10 |10      |a           |null                                     |0      |
|79      |         |         |2024-12-09 16:46:04 |10      |a           |null                                     |0      |
|78      |         |         |2024-12-09 16:45:52 |10      |a           |null                                     |0      |
|77      |         |         |2024-12-09 16:45:44 |10      |a           |null                                     |0      |
|76      |         |         |2024-12-09 16:45:32 |10      |a           |null                                     |0      |
|75      |         |         |2024-12-09 16:45:14 |10      |a           |null                                     |0      |
|74      |         |         |2024-12-09 16:41:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|73      |         |         |2024-12-09 16:41:24 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|72      |         |         |2024-12-09 16:41:11 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|71      |         |         |2024-12-09 16:25:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |         |         |2024-12-09 16:23:28 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |         |         |2024-12-09 12:07:21 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |         |         |2024-12-09 12:07:13 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |         |         |2024-12-09 12:07:03 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |         |         |2024-12-04 16:20:54 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |         |         |2024-12-04 16:19:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 81
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6e2bdac-9f50-4218-af1a-a5825a2d6c06.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 81
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a35be439-cac6-4043-be88-9195275fcdae.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 80
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|237b554e-bb3e-48a2-b61d-ad372ce50daa.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 79
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1d897d86-c30e-4302-a2c7-1b5045be9113.gif |
|5d729d9e-e04a-4a5b-bd65-d3cd10c5b54a.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 78
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8cb03c1b-8891-485b-a4c4-9ca17c4555d0.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 77
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|812fe35f-3dbe-4e1c-b214-a10f5871472a.gif |
|87b517db-e9b2-46b4-91c4-a4b669f2cefa.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 76
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6e9f4e83-2ba9-4301-a73c-948b75f2ff74.gif |
|df926f28-ff1e-48a5-b3b4-23cd1cea7821.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 75
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 74
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3d74004f-12f4-4991-92be-ac91a14cc40f.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 74
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dd7d3fe7-8656-4c29-a0ce-311b72eb2438.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 73
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0461963e-f147-4cbd-9cbe-c9de5a85675d.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 72
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:58:36 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:36 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |2024-11-28 12:40:23 |123      |4        |2         |20        |35              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |             |         |2024-12-09 16:23:28 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 1 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 1 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 16:58:40 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 16:58:40 INFO http-nio-8080-exec-4] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:06:54 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: com.green.greengram.feed.comment.model.FeedCommentPostReq@790ce77d
[2024-12-09 17:06:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
          SET feed_id = 6
            , user_id = 1
            , comment = '귀엽죠 '
 {executed in 3 msec}
[2024-12-09 17:06:54 DEBUGhttp-nio-8080-exec-2] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
          SET feed_id = 6
            , user_id = 1
            , comment = '귀엽죠 '
 {executed in 0 msec}
[2024-12-09 17:06:54 INFO http-nio-8080-exec-2] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|81        |
|----------|

[2024-12-09 17:06:54 INFO http-nio-8080-exec-2] [com.green.greengram.feed.comment.FeedCommentController] +++++++++++++++++++++++++++ 81
[2024-12-09 17:06:56 INFO http-nio-8080-exec-5] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@ed5114
[2024-12-09 17:06:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 6
           AND user_id = 1
 {executed in 1 msec}
[2024-12-09 17:06:56 DEBUGhttp-nio-8080-exec-5] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 6
             , user_id = 1
 {executed in 1 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|81      |         |         |2024-12-09 16:46:24 |10      |a           |null                                     |0      |
|80      |         |         |2024-12-09 16:46:10 |10      |a           |null                                     |0      |
|79      |         |         |2024-12-09 16:46:04 |10      |a           |null                                     |0      |
|78      |         |         |2024-12-09 16:45:52 |10      |a           |null                                     |0      |
|77      |         |         |2024-12-09 16:45:44 |10      |a           |null                                     |0      |
|76      |         |         |2024-12-09 16:45:32 |10      |a           |null                                     |0      |
|75      |         |         |2024-12-09 16:45:14 |10      |a           |null                                     |0      |
|74      |         |         |2024-12-09 16:41:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|73      |         |         |2024-12-09 16:41:24 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|72      |         |         |2024-12-09 16:41:11 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|71      |         |         |2024-12-09 16:25:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |         |         |2024-12-09 16:23:28 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |         |         |2024-12-09 12:07:21 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |         |         |2024-12-09 12:07:13 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |         |         |2024-12-09 12:07:03 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |         |         |2024-12-04 16:20:54 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |         |         |2024-12-04 16:19:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 81
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6e2bdac-9f50-4218-af1a-a5825a2d6c06.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 81
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a35be439-cac6-4043-be88-9195275fcdae.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 80
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|237b554e-bb3e-48a2-b61d-ad372ce50daa.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 79
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1d897d86-c30e-4302-a2c7-1b5045be9113.gif |
|5d729d9e-e04a-4a5b-bd65-d3cd10c5b54a.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 78
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8cb03c1b-8891-485b-a4c4-9ca17c4555d0.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 77
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|812fe35f-3dbe-4e1c-b214-a10f5871472a.gif |
|87b517db-e9b2-46b4-91c4-a4b669f2cefa.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 76
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 15 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 1 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6e9f4e83-2ba9-4301-a73c-948b75f2ff74.gif |
|df926f28-ff1e-48a5-b3b4-23cd1cea7821.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 75
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 74
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3d74004f-12f4-4991-92be-ac91a14cc40f.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 74
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dd7d3fe7-8656-4c29-a0ce-311b72eb2438.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 73
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0461963e-f147-4cbd-9cbe-c9de5a85675d.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 72
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 17:08:12 DEBUGhttp-nio-8080-exec-1] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:12 INFO http-nio-8080-exec-1] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 INFO http-nio-8080-exec-6] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |2024-11-28 12:40:23 |123      |4        |2         |20        |35              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |             |         |2024-12-09 16:23:28 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 1 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 17:08:16 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 17:08:16 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 17:09:01 INFO http-nio-8080-exec-10] [com.green.greengram.feed.like.FeedLikeController] FeedLikeController > feedLikeToggle > p: com.green.greengram.feed.like.model.FeedLikeReq@511259af
[2024-12-09 17:09:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed_like
         WHERE feed_id = 6
           AND user_id = 1
 {executed in 0 msec}
[2024-12-09 17:09:01 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_like
           SET feed_id = 6
             , user_id = 1
 {executed in 0 msec}
[2024-12-09 17:50:32 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 17:50:32 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
[2024-12-09 18:03:38 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Starting GreenGramVer2Application using Java 17.0.13 with PID 9276 (D:\jju\GreenGramVer3\build\classes\java\main started by Administrator in D:\jju\GreenGramVer3)
[2024-12-09 18:03:38 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] No active profile set, falling back to 1 default profile: "default"
[2024-12-09 18:03:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2024-12-09 18:03:38 INFO restartedMain] [org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2024-12-09 18:03:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat initialized with port 8080 (http)
[2024-12-09 18:03:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Initializing ProtocolHandler ["http-nio-8080"]
[2024-12-09 18:03:39 INFO restartedMain] [org.apache.catalina.core.StandardService] Starting service [Tomcat]
[2024-12-09 18:03:39 INFO restartedMain] [org.apache.catalina.core.StandardEngine] Starting Servlet engine: [Apache Tomcat/10.1.33]
[2024-12-09 18:03:39 INFO restartedMain] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring embedded WebApplicationContext
[2024-12-09 18:03:39 INFO restartedMain] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] Root WebApplicationContext: initialization completed in 786 ms
[2024-12-09 18:03:39 INFO restartedMain] [com.green.greengram.common.MyFileUtils] MyFileUtiles - 생성자: D:/mydownload/greengram_ver3
[2024-12-09 18:03:39 INFO restartedMain] [org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping] Adding welcome page: class path resource [static/index.html]
[2024-12-09 18:03:39 INFO restartedMain] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] LiveReload server is running on port 35729
[2024-12-09 18:03:39 INFO restartedMain] [org.apache.coyote.http11.Http11NioProtocol] Starting ProtocolHandler ["http-nio-8080"]
[2024-12-09 18:03:39 INFO restartedMain] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] Tomcat started on port 8080 (http) with context path '/'
[2024-12-09 18:03:39 INFO restartedMain] [com.green.greengram.GreenGramVer2Application] Started GreenGramVer2Application in 1.68 seconds (process running for 2.052)
[2024-12-09 18:03:46 INFO http-nio-8080-exec-1] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2024-12-09 18:03:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Initializing Servlet 'dispatcherServlet'
[2024-12-09 18:03:46 INFO http-nio-8080-exec-1] [org.springframework.web.servlet.DispatcherServlet] Completed initialization in 1 ms
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Starting...
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.pool.HikariPool] HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7349f42d
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Start completed.
[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|81      |         |         |2024-12-09 16:46:24 |10      |a           |null                                     |0      |
|80      |         |         |2024-12-09 16:46:10 |10      |a           |null                                     |0      |
|79      |         |         |2024-12-09 16:46:04 |10      |a           |null                                     |0      |
|78      |         |         |2024-12-09 16:45:52 |10      |a           |null                                     |0      |
|77      |         |         |2024-12-09 16:45:44 |10      |a           |null                                     |0      |
|76      |         |         |2024-12-09 16:45:32 |10      |a           |null                                     |0      |
|75      |         |         |2024-12-09 16:45:14 |10      |a           |null                                     |0      |
|74      |         |         |2024-12-09 16:41:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|73      |         |         |2024-12-09 16:41:24 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|72      |         |         |2024-12-09 16:41:11 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|71      |         |         |2024-12-09 16:25:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |         |         |2024-12-09 16:23:28 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |         |         |2024-12-09 12:07:21 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |         |         |2024-12-09 12:07:13 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |         |         |2024-12-09 12:07:03 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |         |         |2024-12-04 16:20:54 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |         |         |2024-12-04 16:19:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 81
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6e2bdac-9f50-4218-af1a-a5825a2d6c06.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 81
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a35be439-cac6-4043-be88-9195275fcdae.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 80
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|237b554e-bb3e-48a2-b61d-ad372ce50daa.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 79
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1d897d86-c30e-4302-a2c7-1b5045be9113.gif |
|5d729d9e-e04a-4a5b-bd65-d3cd10c5b54a.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 78
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8cb03c1b-8891-485b-a4c4-9ca17c4555d0.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 77
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|812fe35f-3dbe-4e1c-b214-a10f5871472a.gif |
|87b517db-e9b2-46b4-91c4-a4b669f2cefa.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 76
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6e9f4e83-2ba9-4301-a73c-948b75f2ff74.gif |
|df926f28-ff1e-48a5-b3b4-23cd1cea7821.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 75
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 74
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3d74004f-12f4-4991-92be-ac91a14cc40f.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 74
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dd7d3fe7-8656-4c29-a0ce-311b72eb2438.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 73
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0461963e-f147-4cbd-9cbe-c9de5a85675d.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 72
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 18:03:47 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:47 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [com.green.greengram.feed.model.FeedGetReq] page: 2, size: null, signeduserId: 1
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=1, profileUserId=null)
[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 20, 20
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|35      |             |         |2024-12-04 16:19:09 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|25              |팬이에요~           |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|23              |이쁘시네요           |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-09 18:03:51 DEBUGhttp-nio-8080-exec-7] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:03:51 INFO http-nio-8080-exec-7] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:01 INFO http-nio-8080-exec-3] [com.green.greengram.feed.comment.FeedCommentController] FeedCommentController > postFeedComment > p: com.green.greengram.feed.comment.model.FeedCommentPostReq@1388a9c7
[2024-12-09 18:04:01 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO feed_comment
          SET feed_id = 6
            , user_id = 1
            , comment = '123123123123213'
 {executed in 0 msec}
[2024-12-09 18:04:01 DEBUGhttp-nio-8080-exec-3] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO feed_comment
          SET feed_id = 6
            , user_id = 1
            , comment = '123123123123213'
 {executed in 0 msec}
[2024-12-09 18:04:01 INFO http-nio-8080-exec-3] [jdbc.resultsettable] 
|----------|
|insert_id |
|----------|
|82        |
|----------|

[2024-12-09 18:04:01 INFO http-nio-8080-exec-3] [com.green.greengram.feed.comment.FeedCommentController] +++++++++++++++++++++++++++ 82
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=1)
[2024-12-09 18:04:07 INFO http-nio-8080-exec-8] [com.green.greengram.user.UserController] UserController > getUserInfo > p: UserInfoGetReq(signedUserId=1, profileUserId=1)
[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

            WHERE a.writer_user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 1 msec}
[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-8] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT A.user_id AS userId, A.pic, A.created_at AS createdAt
        , IF(A.nick_name IS NULL, A.uid, A.nick_name) AS nickName
        , COUNT(DISTINCT F1.from_user_id, F1.to_user_id) AS `follower`
        , COUNT(DISTINCT F2.from_user_id, F2.to_user_id) AS `following`
        , COUNT(DISTINCT F3.feed_id) AS feedCount
        , COUNT(DISTINCT F4.feed_id, F4.user_id) AS myFeedLikeCount 
        , MAX(IF(F1.from_user_id = 1, 1, 0))
        + MAX(IF(F2.to_user_id = 1, 2, 0)) AS followState
        FROM user A
        LEFT JOIN user_follow F1
          ON A.user_id = F1.to_user_id  
        LEFT JOIN user_follow F2
          ON A.user_id = F2.from_user_id 
        LEFT JOIN feed F3
          ON A.user_id = F3.writer_user_id 
        LEFT JOIN feed_like F4
          ON F3.feed_id = F4.feed_id 
        WHERE A.user_id = 1
 {executed in 1 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|71      |             |         |2024-12-09 16:25:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |             |         |2024-12-09 16:23:28 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |             |         |2024-12-09 12:07:21 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |             |         |2024-12-09 12:07:13 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |             |         |2024-12-09 12:07:03 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|37      |             |         |2024-12-04 16:20:54 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |             |         |2024-12-04 16:19:53 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|35      |             |         |2024-12-04 16:19:09 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|6       |             |         |2024-11-29 13:02:10 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 18:04:07 INFO http-nio-8080-exec-8] [jdbc.resultsettable] 
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|user_id |pic                                      |created_at          |nickname |follower |following |feedcount |myfeedlikecount |followstate |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|
|1       |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |2024-11-28 12:40:23 |123      |4        |2         |20        |36              |0           |
|--------|-----------------------------------------|--------------------|---------|---------|----------|----------|----------------|------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 1 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 1 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 1 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 6
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|166a88ce-b3d6-4e7a-bc94-dc3218b25d5e.jpg |
|6eae3740-ff11-40d7-ac65-bc3acba4537b.jpg |
|-----------------------------------------|

[2024-12-09 18:04:07 DEBUGhttp-nio-8080-exec-10] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 6
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:07 INFO http-nio-8080-exec-10] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|82              |123123123123213 |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:13 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedController] FeedController > deleteFeed > p: com.green.greengram.feed.model.FeedDeleteReq@4a1b1210
[2024-12-09 18:04:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = 6
        AND A.writer_user_id = 1
 {executed in 0 msec}
[2024-12-09 18:04:13 INFO http-nio-8080-exec-4] [com.green.greengram.feed.FeedService] affectedRows: 4
[2024-12-09 18:04:13 DEBUGhttp-nio-8080-exec-4] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM feed
        WHERE feed_id = 6
        AND writer_user_id = 1
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [com.green.greengram.feed.model.FeedGetReq] page: 1, size: null, signeduserId: 1
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=1, size=20, startIdx=0), signedUserId=1, profileUserId=null)
[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 0, 20
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|feed_id |contents |location |created_at          |user_id |writernm    |pic                                      |islike |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|
|81      |         |         |2024-12-09 16:46:24 |10      |a           |null                                     |0      |
|80      |         |         |2024-12-09 16:46:10 |10      |a           |null                                     |0      |
|79      |         |         |2024-12-09 16:46:04 |10      |a           |null                                     |0      |
|78      |         |         |2024-12-09 16:45:52 |10      |a           |null                                     |0      |
|77      |         |         |2024-12-09 16:45:44 |10      |a           |null                                     |0      |
|76      |         |         |2024-12-09 16:45:32 |10      |a           |null                                     |0      |
|75      |         |         |2024-12-09 16:45:14 |10      |a           |null                                     |0      |
|74      |         |         |2024-12-09 16:41:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|73      |         |         |2024-12-09 16:41:24 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|72      |         |         |2024-12-09 16:41:11 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |1      |
|71      |         |         |2024-12-09 16:25:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|70      |         |         |2024-12-09 16:23:28 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|69      |         |         |2024-12-09 12:07:21 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|68      |         |         |2024-12-09 12:07:13 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|67      |         |         |2024-12-09 12:07:03 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|60      |asd      |asd      |2024-12-06 13:09:27 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|54      |asd      |asd      |2024-12-06 13:08:55 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|52      |asd      |asd      |2024-12-06 13:08:35 |7       |내가 못뚫을지 알아? |fec2385f-433d-4701-a841-9489730c9238.gif |0      |
|37      |         |         |2024-12-04 16:20:54 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|36      |         |         |2024-12-04 16:19:53 |1       |123         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|--------|---------|---------|--------------------|--------|------------|-----------------------------------------|-------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 81
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b6e2bdac-9f50-4218-af1a-a5825a2d6c06.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 81
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 80
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a35be439-cac6-4043-be88-9195275fcdae.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 80
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 79
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|237b554e-bb3e-48a2-b61d-ad372ce50daa.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 79
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 78
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1d897d86-c30e-4302-a2c7-1b5045be9113.gif |
|5d729d9e-e04a-4a5b-bd65-d3cd10c5b54a.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 78
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 77
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8cb03c1b-8891-485b-a4c4-9ca17c4555d0.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 77
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 76
 {executed in 1 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|812fe35f-3dbe-4e1c-b214-a10f5871472a.gif |
|87b517db-e9b2-46b4-91c4-a4b669f2cefa.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 76
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 75
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6e9f4e83-2ba9-4301-a73c-948b75f2ff74.gif |
|df926f28-ff1e-48a5-b3b4-23cd1cea7821.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 75
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 74
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|3d74004f-12f4-4991-92be-ac91a14cc40f.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 74
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 73
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|dd7d3fe7-8656-4c29-a0ce-311b72eb2438.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 73
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 72
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0461963e-f147-4cbd-9cbe-c9de5a85675d.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 72
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 71
 {executed in 1 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|382d2f65-b4bf-44b9-8260-d6e7b7935a10.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 71
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 70
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf01adf1-1381-426d-8fe9-7d39d39ab50c.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 70
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 69
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2cedca0c-f122-409e-85cd-f6a2572a8d75.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 69
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 68
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a657af9a-5dde-4a5a-845d-787ada0d5a28.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 68
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 67
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c98b5416-6382-433a-9816-38f4bcf5d159.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 67
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 60
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|bf6e7c22-7fc0-49a3-888e-d629c58c6194.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 60
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 54
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|8ce04993-8ffc-43bb-9f60-77509b5efdef.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 54
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 52
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|66ac6fba-13f7-435b-87f6-cd7e5039a278.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 52
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 37
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a1089999-9a1e-498c-98a4-02ff4595d7e1.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 37
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 36
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|88ad7894-f072-4a62-93af-f4ddca689bfe.gif |
|-----------------------------------------|

[2024-12-09 18:04:18 DEBUGhttp-nio-8080-exec-9] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 36
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:18 INFO http-nio-8080-exec-9] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [com.green.greengram.feed.model.FeedGetReq] page: 2, size: null, signeduserId: 1
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [com.green.greengram.feed.FeedController] FeedController > getFeedList > p: FeedGetReq(super=Paging(page=2, size=20, startIdx=20), signedUserId=1, profileUserId=null)
[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm 
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike 
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c 
        ON a.feed_id = c.feed_id
        AND c.user_id = 1

        ORDER BY a.feed_id desc
        LIMIT 20, 20
 {executed in 1 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|feed_id |contents     |location |created_at          |user_id |writernm |pic                                      |islike |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|
|35      |             |         |2024-12-04 16:19:09 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|34      |             |         |2024-12-04 16:16:57 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|33      |             |         |2024-12-04 16:08:11 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|32      |아이린          |안과       |2024-12-04 15:55:20 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|31      |최예나          |         |2024-12-03 17:55:24 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|29      |aa           |aa       |2024-12-03 17:50:55 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |0      |
|27      |I am panguin |남극       |2024-11-29 16:46:19 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|26      |며느리          |         |2024-11-29 16:27:19 |5       |오무하무     |null                                     |0      |
|25      |장원영          |대한민국     |2024-11-29 16:23:51 |5       |오무하무     |null                                     |1      |
|22      |르세라핌         |대한민국     |2024-11-29 16:17:06 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|13      |뉴진스          |대한민국     |2024-11-29 16:05:23 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|11      |에스파          |대한민국     |2024-11-29 14:45:31 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|10      |아이브          |대한민국     |2024-11-29 14:41:47 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|9       |토트넘 훗스퍼FC    |영국 런던    |2024-11-29 14:32:05 |1       |123      |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |1      |
|2       |null         |중앙로      |2024-11-29 10:36:24 |2       |111      |6b886ed8-8e1a-44f5-a45d-7831f7f9477f.jpg |0      |
|--------|-------------|---------|--------------------|--------|---------|-----------------------------------------|-------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 35
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|ce004bb9-3aad-4849-9641-95e04513ed99.gif |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 35
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 34
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fb097ee9-4233-4aff-983f-59a056313f9b.gif |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 34
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 33
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|d161f911-60c0-4650-9fdc-06d10c19dcef.gif |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 33
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 32
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|fc3431fe-c0d1-4eeb-bd81-eb650d47d507.gif |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 32
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 31
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6ab2f590-3d0c-46f9-9d05-7a0f44e12927.gif |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 31
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 29
 {executed in 1 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|a7fb3748-4f15-4bae-88e6-81b6767e9aef.gif |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 29
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 27
 {executed in 1 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b18cd2ea-adc9-438a-9ead-1a8b14ca1010.jpg |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 27
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|80              |29      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|78              |28      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|77              |27      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|76              |26      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 26
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|6a04709c-5370-451a-b1f7-5e3a7956e87f.jpg |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 26
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment         |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|
|26              |항상 응원합니다.       |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|25              |팬이에요~           |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|24              |피드보고 팔로우 걸었어요^^ |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|23              |이쁘시네요           |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 25
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|b3075c03-b152-4b5e-b987-2ab61c257de2.jpg |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 25
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|47              |14      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|46              |13      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|45              |12      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|44              |11      |6       |펭귄                                          |bf51dc4b-aba1-4894-bb26-70d639795698.jpg |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 22
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|0659edb7-0807-48b4-946d-36a75488615d.jpg |
|4b4cfb42-e1b7-4a4f-a8ac-65a15998eb4a.jpg |
|e7538cc7-4690-4e14-8ab8-846a78ae762d.jpg |
|f2458a2e-5f39-4589-bcf7-e5e41a11c286.jpg |
|f870fe48-ad36-4072-af8c-be94761b4b26.jpg |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 22
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|5               |와우      |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 13
 {executed in 1 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|085cd289-1b97-4c55-826d-fd3d9c0e2420.jpg |
|1411b7e3-5116-498c-a588-4ef541bc7365.jpg |
|15d5849a-3407-4d95-a7bf-25552fc61682.jpg |
|bc52ed31-e710-4791-908b-49a9820f5f6f.jpg |
|d394746f-9a83-4d89-85c2-82cfee61f432.jpg |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 13
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 1 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|6               |대박이다    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 11
 {executed in 1 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|2ff4df65-8760-4741-9049-7d544a917c11.jpg |
|5206c023-75b5-4ad0-959b-fba1d686964b.jpg |
|7ad82d87-a794-4f9b-9df2-71281205a98f.jpg |
|bb813508-03e4-49db-a8a1-3fffe0afc9f5.jpg |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 11
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|
|7               |팬이에요    |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|--------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 10
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|00347c4c-a59b-4656-be53-ea553e15db48.png |
|186e42db-9cfc-4498-878e-8e6cb059ad3a.png |
|1f860ce4-33c5-426b-abb1-453146d68f12.png |
|c819d6be-9050-4ba5-87d9-1b65450a4b7b.jpg |
|d9070b61-cdc7-4754-a690-d6916c8c9041.jpg |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 10
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|feed_comment_id |comment   |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic                                      |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|
|8               |저랑 사진 한번만 |1       |123                                         |8b40c28c-88ce-474b-89d2-105cf6eb23c3.gif |
|----------------|----------|--------|--------------------------------------------|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 9
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|1c84b819-e437-4202-adcc-d669a92b2a78.png |
|1da2e6ba-995a-4064-bdd0-399deccb9d2e.png |
|3de76dfd-a152-42a5-93bc-7de6c4fe8825.png |
|513a692a-42c9-4eb4-aec8-5649780de4cb.png |
|710f98b6-c846-4e74-8cce-ef59cec1ebcf.png |
|77d199e7-fe19-4bb9-a108-ca70839a6607.png |
|94b37f82-0bb3-4ce6-80b5-c28f98bcce7a.png |
|a60aa52a-29e5-4d31-aab9-142a535b2fff.png |
|b285f470-3ec7-45e0-82dd-f6a3af45191e.png |
|c0fc9a57-66b4-4b04-975f-87584325b683.png |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 9
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT pic
        FROM feed_pic
        WHERE feed_id = 2
 {executed in 1 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|-----------------------------------------|
|pic                                      |
|-----------------------------------------|
|c47dd806-2ef2-4895-b349-c28b3feaba9a.jpg |
|e6b785de-e437-40eb-ab1a-47420e80eecf.jpg |
|-----------------------------------------|

[2024-12-09 18:04:20 DEBUGhttp-nio-8080-exec-6] [jdbc.sqltiming]  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT a.feed_comment_id as feedCommentId
             , a.comment
             , b.user_id as writerUserId
             , IF(b.nick_name IS NULL, b.uid, b.nick_name)
             , b.pic as writerPic
         FROM feed_comment a
        INNER JOIN user b
           ON a.user_id = b.user_id
        WHERE a.feed_id = 2
        ORDER BY feed_comment_id desc
        LIMIT 0, 4
 {executed in 0 msec}
[2024-12-09 18:04:20 INFO http-nio-8080-exec-6] [jdbc.resultsettable] 
|----------------|--------|--------|--------------------------------------------|----|
|feed_comment_id |comment |user_id |if(b.nick_name is null, b.uid, b.nick_name) |pic |
|----------------|--------|--------|--------------------------------------------|----|
|----------------|--------|--------|--------------------------------------------|----|

[2024-12-09 18:10:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown initiated...
[2024-12-09 18:10:11 INFO SpringApplicationShutdownHook] [com.zaxxer.hikari.HikariDataSource] HikariPool-1 - Shutdown completed.
